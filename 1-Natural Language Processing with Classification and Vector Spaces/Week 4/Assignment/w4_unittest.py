# -*- coding: utf-8 -*-
import numpy as np
import pickle
from nltk.corpus import twitter_samples
from utils import get_dict


def test_get_matrices(target):
    successful_cases = 0
    failed_cases = []

    en_fr_train = get_dict("./data/en-fr.train.txt")
    en_fr_test = get_dict("./data/en-fr.test.txt")
    en_embeddings_subset = pickle.load(open("./data/en_embeddings.p", "rb"))
    fr_embeddings_subset = pickle.load(open("./data/fr_embeddings.p", "rb"))

    test_cases = [
        {
            "name": "default_check",
            "input": {
                "en_fr": en_fr_train,
                "french_vecs": fr_embeddings_subset,
                "english_vecs": en_embeddings_subset,
            },
            "expected": {
                "X_0": np.array(
                    [
                        0.08007812,
                        0.10498047,
                        0.04980469,
                        0.0534668,
                        -0.06738281,
                        -0.12060547,
                        0.03515625,
                        -0.11865234,
                        0.04394531,
                        0.03015137,
                        -0.05688477,
                        -0.07617188,
                        0.01287842,
                        0.04980469,
                        -0.08496094,
                        -0.06347656,
                        0.00628662,
                        -0.04321289,
                        0.02026367,
                        0.01330566,
                        -0.01953125,
                        0.09277344,
                        -0.171875,
                        -0.00131989,
                        0.06542969,
                        0.05834961,
                        -0.08251953,
                        0.0859375,
                        -0.00318909,
                        0.05859375,
                        -0.03491211,
                        -0.0123291,
                        -0.0480957,
                        -0.00302124,
                        0.05639648,
                        0.01495361,
                        -0.07226562,
                        -0.05224609,
                        0.09667969,
                        0.04296875,
                        -0.03540039,
                        -0.07324219,
                        0.03271484,
                        -0.06176758,
                        0.00787354,
                        0.0035553,
                        -0.00878906,
                        0.0390625,
                        0.03833008,
                        0.04443359,
                        0.06982422,
                        0.01263428,
                        -0.00445557,
                        -0.03320312,
                        -0.04272461,
                        0.09765625,
                        -0.02160645,
                        -0.0378418,
                        0.01190186,
                        -0.01391602,
                        -0.11328125,
                        0.09326172,
                        -0.03930664,
                        -0.11621094,
                        0.02331543,
                        -0.01599121,
                        0.02636719,
                        0.10742188,
                        -0.00466919,
                        0.09619141,
                        0.0279541,
                        -0.05395508,
                        0.08544922,
                        -0.03686523,
                        -0.02026367,
                        -0.08544922,
                        0.125,
                        0.14453125,
                        0.0267334,
                        0.15039062,
                        0.05273438,
                        -0.18652344,
                        0.08154297,
                        -0.01062012,
                        -0.03735352,
                        -0.07324219,
                        -0.07519531,
                        0.03613281,
                        -0.13183594,
                        0.00616455,
                        0.05078125,
                        0.04516602,
                        0.0100708,
                        -0.15039062,
                        -0.06005859,
                        0.05761719,
                        -0.00692749,
                        0.01586914,
                        -0.0213623,
                        0.10351562,
                        -0.00029182,
                        -0.046875,
                        -0.01635742,
                        -0.07861328,
                        -0.06933594,
                        0.01635742,
                        -0.03149414,
                        -0.01373291,
                        -0.03662109,
                        -0.08886719,
                        -0.0480957,
                        -0.01318359,
                        -0.07177734,
                        0.00588989,
                        -0.04614258,
                        0.03979492,
                        0.10058594,
                        -0.04931641,
                        0.07568359,
                        0.03881836,
                        -0.16699219,
                        -0.09619141,
                        -0.10107422,
                        0.02905273,
                        -0.05786133,
                        -0.01928711,
                        -0.04296875,
                        -0.08398438,
                        -0.01989746,
                        0.05151367,
                        0.00848389,
                        -0.03613281,
                        -0.14941406,
                        -0.01855469,
                        -0.03637695,
                        -0.07666016,
                        -0.03955078,
                        -0.06152344,
                        -0.02001953,
                        0.04150391,
                        0.03686523,
                        -0.07226562,
                        0.00592041,
                        -0.06298828,
                        0.00738525,
                        -0.01586914,
                        0.01611328,
                        -0.01452637,
                        0.00772095,
                        0.10107422,
                        -0.00558472,
                        0.01428223,
                        -0.07617188,
                        0.05639648,
                        -0.01293945,
                        0.03063965,
                        -0.02490234,
                        -0.09863281,
                        0.0324707,
                        -0.02807617,
                        -0.08105469,
                        0.02062988,
                        0.01611328,
                        -0.04199219,
                        -0.03491211,
                        -0.03759766,
                        0.05493164,
                        0.01373291,
                        0.02685547,
                        -0.05859375,
                        -0.07177734,
                        -0.12011719,
                        -0.02282715,
                        -0.1640625,
                        -0.00361633,
                        -0.05981445,
                        0.07080078,
                        -0.07714844,
                        0.05175781,
                        -0.04296875,
                        -0.04833984,
                        0.0300293,
                        -0.06591797,
                        -0.03173828,
                        -0.04882812,
                        -0.03491211,
                        0.05883789,
                        -0.01464844,
                        0.18066406,
                        0.05688477,
                        0.05249023,
                        0.05786133,
                        0.11669922,
                        0.05200195,
                        -0.0534668,
                        0.01867676,
                        -0.015625,
                        0.00576782,
                        -0.07324219,
                        -0.11621094,
                        0.04052734,
                        0.0625,
                        -0.04321289,
                        0.01055908,
                        0.02172852,
                        0.04248047,
                        0.03271484,
                        0.04418945,
                        0.05761719,
                        0.02612305,
                        -0.01831055,
                        -0.02697754,
                        -0.00674438,
                        0.00509644,
                        -0.11621094,
                        0.00364685,
                        0.05761719,
                        -0.05957031,
                        -0.08837891,
                        0.0135498,
                        0.04541016,
                        -0.04638672,
                        -0.0177002,
                        -0.0625,
                        0.03442383,
                        -0.02416992,
                        0.03088379,
                        0.09570312,
                        0.07958984,
                        0.03930664,
                        0.0279541,
                        -0.0859375,
                        0.08105469,
                        0.06640625,
                        -0.00041962,
                        -0.06933594,
                        0.03588867,
                        -0.03417969,
                        0.04492188,
                        -0.00772095,
                        -0.00741577,
                        -0.04760742,
                        0.01397705,
                        -0.09960938,
                        0.0246582,
                        -0.09960938,
                        0.11474609,
                        0.03173828,
                        0.02209473,
                        0.07226562,
                        0.03686523,
                        0.02563477,
                        0.01367188,
                        -0.02734375,
                        0.00592041,
                        -0.06738281,
                        0.05053711,
                        -0.02832031,
                        -0.04516602,
                        -0.01733398,
                        0.02111816,
                        0.03515625,
                        -0.04296875,
                        0.06640625,
                        0.12207031,
                        0.12353516,
                        0.0039978,
                        0.04516602,
                        -0.01855469,
                        0.04833984,
                        0.04516602,
                        0.08691406,
                        0.02941895,
                        0.03759766,
                        0.03442383,
                        -0.07373047,
                        -0.0402832,
                        -0.14648438,
                        -0.02441406,
                        -0.01953125,
                        0.0065918,
                        -0.0018158,
                        -0.01092529,
                        0.09326172,
                        0.06542969,
                        0.01843262,
                        -0.09326172,
                        -0.01574707,
                        -0.07128906,
                        -0.08935547,
                        -0.07128906,
                        -0.03015137,
                        -0.01300049,
                        0.01635742,
                        -0.01831055,
                        0.01483154,
                        0.00500488,
                        0.00366211,
                        0.04760742,
                        -0.06884766,
                    ]
                ),
                "Y_0": np.array(
                    [
                        -6.18250e-03,
                        -9.43867e-04,
                        -8.82648e-03,
                        3.24623e-02,
                        -2.18281e-02,
                        2.98912e-02,
                        2.29990e-02,
                        2.80628e-02,
                        5.87757e-03,
                        -2.56806e-02,
                        4.21732e-02,
                        -9.37519e-03,
                        2.86577e-02,
                        -5.08309e-02,
                        -7.13388e-02,
                        -8.34270e-03,
                        -2.88709e-02,
                        -3.85773e-02,
                        4.38649e-02,
                        1.18239e-01,
                        -8.57782e-02,
                        2.65617e-02,
                        -1.21373e-01,
                        -1.88254e-02,
                        -5.46811e-02,
                        -8.06788e-02,
                        3.16896e-02,
                        -3.78146e-02,
                        4.16330e-02,
                        -3.09924e-02,
                        -4.15530e-02,
                        5.95500e-02,
                        -6.08129e-02,
                        1.29453e-01,
                        5.98485e-02,
                        -1.22053e-01,
                        -4.65893e-02,
                        -1.76105e-02,
                        8.36952e-02,
                        -3.43169e-02,
                        1.02949e-02,
                        -3.74583e-02,
                        1.56218e-02,
                        2.52615e-02,
                        3.09000e-02,
                        -6.15672e-03,
                        1.78421e-02,
                        -7.97611e-03,
                        4.08416e-02,
                        -3.61498e-02,
                        5.93975e-02,
                        -6.13706e-02,
                        2.76527e-02,
                        -4.04968e-02,
                        4.02123e-02,
                        4.60480e-02,
                        3.12373e-02,
                        4.31485e-02,
                        4.45423e-03,
                        9.88624e-05,
                        -3.46425e-03,
                        -7.78974e-02,
                        1.54648e-01,
                        -6.86087e-02,
                        4.52325e-02,
                        -1.44819e-01,
                        -7.86261e-02,
                        -7.18243e-02,
                        -5.01803e-02,
                        -9.75832e-02,
                        -5.34395e-02,
                        9.02073e-02,
                        -3.81883e-02,
                        -1.13480e-01,
                        -5.68386e-02,
                        -5.91484e-02,
                        -1.26019e-03,
                        1.01070e-01,
                        2.68208e-02,
                        5.06956e-02,
                        6.00346e-02,
                        7.74409e-02,
                        -5.61040e-02,
                        5.44098e-02,
                        -7.55055e-02,
                        -2.98645e-02,
                        -2.68502e-02,
                        3.61278e-02,
                        -3.62457e-02,
                        5.22597e-02,
                        5.38365e-02,
                        1.08371e-01,
                        6.78186e-02,
                        -7.00722e-02,
                        7.43035e-02,
                        -6.62201e-02,
                        1.06870e-02,
                        2.79691e-02,
                        -3.26633e-03,
                        -4.25280e-02,
                        -9.28937e-02,
                        -6.31895e-03,
                        1.44310e-01,
                        -1.25400e-01,
                        -1.16685e-02,
                        2.53940e-02,
                        -4.69559e-02,
                        2.71642e-02,
                        -1.46400e-02,
                        1.33371e-02,
                        -2.44887e-02,
                        -3.82446e-02,
                        -2.43949e-02,
                        -2.10928e-02,
                        -3.89073e-02,
                        -2.47949e-03,
                        5.40797e-02,
                        -1.35001e-02,
                        4.24260e-02,
                        4.02435e-02,
                        1.19622e-01,
                        1.72551e-02,
                        -7.77591e-02,
                        7.70677e-02,
                        5.39903e-02,
                        1.48290e-02,
                        -1.14786e-02,
                        3.96226e-02,
                        6.34068e-02,
                        3.08243e-02,
                        -1.00483e-01,
                        4.84344e-02,
                        -2.81898e-02,
                        -3.72230e-02,
                        -8.17851e-03,
                        1.57217e-01,
                        -2.91976e-02,
                        9.02530e-02,
                        4.98912e-02,
                        8.09812e-02,
                        -3.76977e-02,
                        2.46775e-02,
                        7.72037e-02,
                        3.18821e-02,
                        8.99249e-02,
                        5.84205e-02,
                        3.41208e-02,
                        2.76246e-02,
                        2.22026e-02,
                        3.28205e-02,
                        1.41397e-02,
                        -1.06921e-01,
                        -3.08114e-02,
                        -1.60526e-02,
                        -1.75090e-02,
                        -1.97769e-02,
                        -1.68273e-02,
                        1.02950e-02,
                        6.34315e-02,
                        5.85020e-03,
                        -4.03612e-02,
                        4.62222e-02,
                        -2.31479e-02,
                        -2.15591e-02,
                        7.29946e-02,
                        -4.83068e-02,
                        -2.59098e-02,
                        3.81010e-02,
                        5.24670e-02,
                        -4.87288e-02,
                        -3.59727e-02,
                        -4.73985e-02,
                        3.14414e-03,
                        -3.67814e-02,
                        -3.96858e-02,
                        3.91813e-03,
                        4.48799e-02,
                        5.32402e-02,
                        -3.10235e-03,
                        3.36822e-02,
                        6.30127e-02,
                        -5.04848e-03,
                        1.42707e-02,
                        2.84067e-02,
                        7.78676e-02,
                        9.43895e-02,
                        1.87137e-02,
                        -4.95746e-02,
                        4.46752e-03,
                        6.55588e-03,
                        -7.15933e-02,
                        -8.42261e-02,
                        9.26764e-02,
                        1.14025e-01,
                        -4.54785e-02,
                        -3.01873e-02,
                        -1.84554e-02,
                        -6.74820e-02,
                        -9.04368e-02,
                        3.54715e-03,
                        6.38533e-03,
                        5.68251e-02,
                        -7.60443e-02,
                        5.64864e-02,
                        3.62291e-02,
                        -3.53769e-02,
                        -3.11386e-02,
                        -1.75674e-02,
                        1.80552e-02,
                        -3.44819e-02,
                        9.85215e-02,
                        2.10186e-02,
                        3.14230e-02,
                        1.14043e-02,
                        -5.46951e-02,
                        -1.02189e-01,
                        -7.43853e-03,
                        -8.57716e-02,
                        -1.25572e-02,
                        6.55862e-02,
                        1.90377e-02,
                        -1.28279e-02,
                        -3.03209e-02,
                        4.31458e-02,
                        -1.37317e-02,
                        -1.78316e-04,
                        -1.39533e-01,
                        6.43804e-02,
                        7.36946e-02,
                        -4.69452e-02,
                        8.92313e-02,
                        9.83245e-02,
                        -2.39298e-02,
                        2.99051e-02,
                        -1.38605e-02,
                        -2.04330e-03,
                        -5.42123e-02,
                        -5.63839e-02,
                        -2.83625e-02,
                        -1.22703e-02,
                        -7.47506e-02,
                        -5.07139e-02,
                        5.61858e-02,
                        6.70254e-03,
                        1.01946e-02,
                        7.48045e-02,
                        6.59548e-02,
                        -9.26681e-03,
                        1.09386e-02,
                        4.78068e-03,
                        8.45448e-03,
                        9.81463e-02,
                        6.79360e-02,
                        -2.54418e-02,
                        -1.28914e-01,
                        -1.39399e-03,
                        -6.58585e-02,
                        -7.43397e-02,
                        8.12461e-02,
                        -6.25947e-02,
                        2.76097e-03,
                        1.19247e-01,
                        3.55322e-02,
                        -4.09402e-02,
                        -4.01827e-02,
                        7.90198e-02,
                        -3.70183e-04,
                        1.64888e-02,
                        1.18278e-02,
                        -6.77377e-03,
                        -8.74498e-02,
                        -1.12267e-01,
                        1.16907e-02,
                        1.05920e-01,
                        -7.28045e-02,
                        -8.08299e-02,
                        2.91518e-02,
                        1.24673e-01,
                        2.06159e-02,
                        -2.28965e-02,
                        -5.88222e-02,
                        3.86628e-02,
                        -7.13715e-03,
                        1.55509e-02,
                        4.44311e-02,
                        5.35564e-02,
                        9.65846e-02,
                        7.42637e-02,
                        -2.38635e-02,
                        6.02833e-02,
                        3.89618e-02,
                        -1.38955e-01,
                        8.12259e-03,
                        2.45422e-02,
                        -6.27549e-02,
                        -4.62050e-02,
                        -8.70064e-02,
                        1.11644e-01,
                        -5.03964e-02,
                        -6.03421e-02,
                    ]
                ),
                "X_shape": (4932, 300),
                "Y_shape": (4932, 300),
                "X_last": np.array(
                    [
                        -4.18090820e-03,
                        7.03125000e-02,
                        -4.51660156e-02,
                        1.89453125e-01,
                        -2.08007812e-01,
                        -1.62109375e-01,
                        -6.49414062e-02,
                        1.50390625e-01,
                        2.61718750e-01,
                        1.22558594e-01,
                        1.39648438e-01,
                        -3.80859375e-02,
                        2.27539062e-01,
                        2.61718750e-01,
                        -9.81445312e-02,
                        -1.82617188e-01,
                        1.76757812e-01,
                        -9.07897949e-04,
                        3.75976562e-02,
                        -7.12890625e-02,
                        3.19824219e-02,
                        8.83789062e-02,
                        1.37695312e-01,
                        4.80957031e-02,
                        1.01562500e-01,
                        -4.32128906e-02,
                        2.18505859e-02,
                        1.65039062e-01,
                        -4.78515625e-01,
                        -3.08593750e-01,
                        6.98089600e-04,
                        -2.65625000e-01,
                        1.03027344e-01,
                        -1.52343750e-01,
                        3.55468750e-01,
                        1.78222656e-02,
                        -9.42382812e-02,
                        1.68945312e-01,
                        1.35742188e-01,
                        2.63671875e-02,
                        -2.74658203e-02,
                        -1.36108398e-02,
                        -4.41406250e-01,
                        2.75390625e-01,
                        -6.25000000e-02,
                        -9.22851562e-02,
                        -3.24218750e-01,
                        -2.24609375e-01,
                        2.81982422e-02,
                        2.91748047e-02,
                        -2.22167969e-02,
                        -3.14453125e-01,
                        -2.63671875e-01,
                        6.44531250e-02,
                        -1.20117188e-01,
                        2.07519531e-02,
                        -9.71679688e-02,
                        -3.58886719e-02,
                        -1.41601562e-01,
                        -2.24609375e-01,
                        1.56250000e-01,
                        -7.22656250e-02,
                        -1.78710938e-01,
                        -1.68945312e-01,
                        2.45117188e-01,
                        -1.11816406e-01,
                        8.88671875e-02,
                        1.99218750e-01,
                        1.03027344e-01,
                        1.58203125e-01,
                        -2.81982422e-02,
                        -7.42187500e-02,
                        2.85644531e-02,
                        -5.82031250e-01,
                        1.92382812e-01,
                        8.72802734e-03,
                        1.70898438e-01,
                        4.83398438e-02,
                        -4.41406250e-01,
                        -8.30078125e-02,
                        -1.37695312e-01,
                        -2.34375000e-01,
                        2.40234375e-01,
                        3.69140625e-01,
                        3.34472656e-02,
                        -1.36718750e-01,
                        -2.08007812e-01,
                        -8.15429688e-02,
                        7.20214844e-03,
                        -1.72851562e-01,
                        4.58984375e-01,
                        -2.17773438e-01,
                        -2.12890625e-01,
                        4.15039062e-02,
                        2.14843750e-01,
                        -1.75781250e-01,
                        1.04003906e-01,
                        1.84570312e-01,
                        -2.22656250e-01,
                        -1.96289062e-01,
                        -1.89453125e-01,
                        6.78710938e-02,
                        8.44726562e-02,
                        -1.09863281e-01,
                        1.37939453e-02,
                        -4.39453125e-01,
                        -1.16699219e-01,
                        9.81445312e-02,
                        1.76757812e-01,
                        2.57812500e-01,
                        -1.01074219e-01,
                        -1.34765625e-01,
                        -7.17163086e-03,
                        2.58789062e-02,
                        2.03125000e-01,
                        -3.30078125e-01,
                        1.23046875e-01,
                        3.12500000e-01,
                        -2.69775391e-02,
                        1.81640625e-01,
                        2.59765625e-01,
                        2.11914062e-01,
                        -1.13769531e-01,
                        -7.03125000e-02,
                        -8.88671875e-02,
                        -1.78710938e-01,
                        7.61718750e-02,
                        -9.81445312e-02,
                        -6.68945312e-02,
                        2.39257812e-02,
                        -2.96875000e-01,
                        -1.71875000e-01,
                        4.71191406e-02,
                        -6.29882812e-02,
                        -4.82421875e-01,
                        -7.61718750e-02,
                        -2.73437500e-01,
                        -5.12695312e-02,
                        2.61718750e-01,
                        2.51464844e-02,
                        -3.63769531e-02,
                        -1.28906250e-01,
                        1.51367188e-01,
                        -7.95898438e-02,
                        2.63671875e-01,
                        -1.58203125e-01,
                        3.76953125e-01,
                        -1.36718750e-01,
                        1.16577148e-02,
                        -2.19726562e-01,
                        8.83789062e-02,
                        -1.42211914e-02,
                        -2.21679688e-01,
                        5.68847656e-02,
                        3.69140625e-01,
                        3.66210938e-02,
                        2.42919922e-02,
                        -1.80664062e-01,
                        -1.27563477e-02,
                        -1.13281250e-01,
                        7.22656250e-02,
                        3.61328125e-02,
                        1.43554688e-01,
                        4.21875000e-01,
                        1.31835938e-01,
                        -2.87109375e-01,
                        7.66601562e-02,
                        9.39941406e-03,
                        -2.79296875e-01,
                        -2.33154297e-02,
                        -1.73339844e-02,
                        1.28906250e-01,
                        1.53320312e-01,
                        -1.57226562e-01,
                        -2.17285156e-02,
                        1.97753906e-02,
                        -8.39233398e-04,
                        -3.55468750e-01,
                        1.51367188e-02,
                        3.27148438e-02,
                        -2.42919922e-02,
                        1.66015625e-01,
                        8.10546875e-02,
                        4.78515625e-02,
                        -1.37695312e-01,
                        1.10351562e-01,
                        -1.09863281e-01,
                        2.19726562e-03,
                        4.19921875e-02,
                        1.55273438e-01,
                        8.25195312e-02,
                        4.54101562e-02,
                        3.35937500e-01,
                        1.08642578e-02,
                        -6.44531250e-02,
                        1.93359375e-01,
                        -1.53320312e-01,
                        6.73828125e-02,
                        -1.25000000e-01,
                        -3.28125000e-01,
                        1.30859375e-01,
                        2.22656250e-01,
                        -6.39648438e-02,
                        7.37304688e-02,
                        -1.67968750e-01,
                        7.42187500e-02,
                        -1.86523438e-01,
                        -2.51953125e-01,
                        -2.11914062e-01,
                        -7.86132812e-02,
                        2.45117188e-01,
                        -3.63769531e-02,
                        -1.66992188e-01,
                        1.68945312e-01,
                        -1.54296875e-01,
                        1.07421875e-02,
                        6.78710938e-02,
                        1.65039062e-01,
                        7.22656250e-02,
                        1.04980469e-02,
                        1.07910156e-01,
                        -7.04956055e-03,
                        -1.34765625e-01,
                        -2.74658203e-02,
                        5.29785156e-02,
                        1.40625000e-01,
                        1.31835938e-01,
                        1.35803223e-03,
                        1.48437500e-01,
                        -2.94921875e-01,
                        -2.24609375e-01,
                        1.84570312e-01,
                        -3.44238281e-02,
                        -5.22460938e-02,
                        -6.93359375e-02,
                        -1.98242188e-01,
                        3.20312500e-01,
                        -2.75390625e-01,
                        -3.65234375e-01,
                        -2.53906250e-01,
                        -1.14746094e-01,
                        8.69140625e-02,
                        7.03125000e-02,
                        3.12500000e-02,
                        2.18750000e-01,
                        5.90820312e-02,
                        1.94335938e-01,
                        3.73046875e-01,
                        -5.40161133e-03,
                        9.76562500e-02,
                        2.14843750e-01,
                        -8.91113281e-03,
                        -1.40625000e-01,
                        -9.27734375e-02,
                        -3.76953125e-01,
                        -1.08886719e-01,
                        1.76757812e-01,
                        8.98437500e-02,
                        -1.16210938e-01,
                        -2.38418579e-05,
                        -3.39355469e-02,
                        7.42187500e-02,
                        1.69677734e-02,
                        1.00097656e-01,
                        -1.02539062e-01,
                        7.76367188e-02,
                        -4.85839844e-02,
                        8.34960938e-02,
                        -9.08203125e-02,
                        -3.28125000e-01,
                        -2.63671875e-01,
                        -2.05078125e-02,
                        -2.38281250e-01,
                        -4.39453125e-02,
                        4.22363281e-02,
                        -1.23046875e-01,
                        -1.15234375e-01,
                        -6.25000000e-02,
                        -1.00097656e-01,
                        7.66601562e-02,
                        1.74804688e-01,
                        -2.69531250e-01,
                        -1.41601562e-01,
                        1.47460938e-01,
                        -5.78613281e-02,
                        -2.34375000e-01,
                        1.48925781e-02,
                        -1.80664062e-01,
                        2.31445312e-01,
                        -1.39648438e-01,
                        -3.93066406e-02,
                        -1.03027344e-01,
                        2.83203125e-01,
                        -1.16699219e-01,
                        6.29882812e-02,
                        -3.84765625e-01,
                        6.98242188e-02,
                        -1.60156250e-01,
                        9.32617188e-02,
                        -1.50390625e-01,
                    ]
                ),
                "Y_last": np.array(
                    [
                        -0.0350154,
                        -0.0336099,
                        -0.0251155,
                        0.0833922,
                        -0.103386,
                        -0.064521,
                        0.00913285,
                        -0.171325,
                        0.00081952,
                        0.0280359,
                        -0.0100746,
                        0.0130733,
                        -0.0800132,
                        0.0138762,
                        0.00885439,
                        -0.0583955,
                        0.0343884,
                        0.0320742,
                        0.0298381,
                        0.0480313,
                        -0.0206709,
                        0.0106196,
                        0.0238416,
                        -0.0273902,
                        0.00190963,
                        -0.0275557,
                        0.0814332,
                        0.0276867,
                        -0.00790145,
                        -0.00556962,
                        -0.0178319,
                        0.020998,
                        -0.13591,
                        0.00756433,
                        -0.0391876,
                        -0.015022,
                        -0.0614575,
                        0.068575,
                        -0.0864913,
                        -0.0406758,
                        -0.0792947,
                        0.0236568,
                        -0.00849635,
                        0.0149423,
                        0.0621303,
                        0.0867704,
                        0.0149909,
                        -0.0317135,
                        0.012704,
                        -0.0122654,
                        0.00273712,
                        -0.111027,
                        -0.0239551,
                        -0.00849651,
                        -0.105221,
                        0.0317956,
                        -0.00304911,
                        0.0465505,
                        -0.0962977,
                        0.0702901,
                        -0.0542862,
                        0.0581737,
                        0.038369,
                        -0.0520042,
                        -0.00983556,
                        0.00594044,
                        0.0641899,
                        0.0632564,
                        -0.0278389,
                        0.0711395,
                        0.0811257,
                        0.0572568,
                        0.0775627,
                        -0.00310079,
                        -0.00280329,
                        0.0494481,
                        0.0897144,
                        0.107651,
                        -0.0178183,
                        -0.0663949,
                        -0.0450373,
                        0.0460275,
                        -0.0156451,
                        0.107854,
                        -0.030737,
                        -0.0949821,
                        0.00889523,
                        -0.00576103,
                        0.0145347,
                        0.0285407,
                        0.00047076,
                        0.0383838,
                        0.0160098,
                        -0.126148,
                        0.064396,
                        0.0938601,
                        -0.0255985,
                        -0.0422065,
                        -0.0294872,
                        0.05636,
                        0.027875,
                        0.0349288,
                        0.114673,
                        -0.0905121,
                        -0.00477648,
                        0.0530736,
                        0.0407328,
                        0.0735928,
                        0.0596778,
                        0.0588058,
                        -0.0818451,
                        0.0381294,
                        0.0303048,
                        0.054084,
                        -0.0205342,
                        0.0066323,
                        0.10851,
                        0.104162,
                        -0.00078099,
                        0.0683047,
                        -0.0348822,
                        -0.0449463,
                        -0.0607861,
                        0.118742,
                        0.0555195,
                        0.00258902,
                        -0.0441385,
                        0.0366593,
                        -0.00264534,
                        0.0826045,
                        0.0941855,
                        -0.0183067,
                        -0.107922,
                        -0.054264,
                        0.0330791,
                        -0.057009,
                        -0.0347631,
                        -0.035983,
                        0.0364856,
                        0.0759856,
                        -0.0194505,
                        0.0739863,
                        0.00406422,
                        -0.0196995,
                        -0.0619319,
                        -0.0507498,
                        -0.0523169,
                        -0.0142484,
                        0.0389514,
                        0.0106265,
                        0.0914481,
                        -0.0179029,
                        0.0789078,
                        -0.073358,
                        -0.0558588,
                        -0.0505905,
                        -0.0421403,
                        0.0431063,
                        0.0115702,
                        0.0265043,
                        -0.0597029,
                        0.0619885,
                        -0.00459101,
                        -0.0858552,
                        0.114326,
                        0.0443447,
                        -0.0712304,
                        -0.117311,
                        0.0619305,
                        0.046231,
                        -0.0619396,
                        -0.063288,
                        -0.109273,
                        -0.0494537,
                        -0.110878,
                        0.0567643,
                        -0.0540322,
                        -0.0178216,
                        0.0566206,
                        -0.094598,
                        0.0214425,
                        0.0484355,
                        0.034626,
                        0.0183296,
                        -0.0180658,
                        0.10374,
                        0.0539034,
                        -0.0847288,
                        0.0492487,
                        -0.00911634,
                        -0.0167295,
                        -0.0822783,
                        0.0113189,
                        0.034282,
                        -0.0105711,
                        -0.0966243,
                        -0.0170784,
                        -0.0243228,
                        -0.0833432,
                        0.0178221,
                        0.130717,
                        0.0513155,
                        0.0553103,
                        -0.0937436,
                        -0.0164263,
                        0.0221875,
                        -0.00415775,
                        -0.100102,
                        -0.104337,
                        -0.0554459,
                        0.0821605,
                        0.046723,
                        0.0435623,
                        -0.0818614,
                        -0.0158747,
                        -0.0491102,
                        -0.0160041,
                        -0.112594,
                        0.0318687,
                        0.00802667,
                        -0.0458065,
                        -0.0190152,
                        -0.0344946,
                        0.00721332,
                        0.107942,
                        0.108987,
                        -0.0322791,
                        -0.0189432,
                        -0.0028629,
                        -0.0274006,
                        0.0167033,
                        0.018818,
                        0.0305482,
                        0.0563837,
                        0.0307943,
                        -0.0308322,
                        0.0423327,
                        0.0206871,
                        0.0335685,
                        -0.0138287,
                        0.0217528,
                        -0.0287926,
                        0.0476129,
                        0.0147125,
                        -0.00797799,
                        0.0607211,
                        0.0943085,
                        0.0735872,
                        0.00147321,
                        0.0158298,
                        -0.0584613,
                        -0.11881,
                        -0.0602036,
                        -0.0181741,
                        0.0901585,
                        -0.0622433,
                        0.014494,
                        -0.0870562,
                        0.056231,
                        0.0317087,
                        0.0285918,
                        0.0147809,
                        0.0395898,
                        -0.00491607,
                        -0.0396574,
                        0.049249,
                        0.0036016,
                        0.10771,
                        -0.039256,
                        -0.0333677,
                        0.0372504,
                        0.0276154,
                        0.0565692,
                        -0.00902725,
                        -0.0480206,
                        0.0468868,
                        0.010635,
                        0.0121966,
                        -0.0306681,
                        -0.0798832,
                        0.00911945,
                        0.06406,
                        -0.0425765,
                        -0.00220266,
                        0.0209906,
                        -0.113618,
                        0.0816391,
                        0.137665,
                        -0.0529738,
                        0.0701497,
                        0.0134847,
                        0.0391908,
                        -0.0393339,
                        -0.0483542,
                        0.0477113,
                        0.0160196,
                        -0.0543802,
                        0.116152,
                        0.110519,
                        0.0197631,
                    ]
                ),
            },
        },
        {
            "name": "test_check",
            "input": {
                "en_fr": en_fr_test,
                "french_vecs": fr_embeddings_subset,
                "english_vecs": en_embeddings_subset,
            },
            "expected": {
                "X_0": np.array(
                    [
                        6.39648438e-02,
                        4.02343750e-01,
                        2.31933594e-02,
                        -1.27929688e-01,
                        -4.44335938e-02,
                        -1.73828125e-01,
                        -4.95605469e-02,
                        -9.17968750e-02,
                        4.74609375e-01,
                        3.80859375e-01,
                        -1.54296875e-01,
                        -1.72851562e-01,
                        -2.07031250e-01,
                        5.29785156e-02,
                        2.58789062e-02,
                        4.84375000e-01,
                        -5.95703125e-02,
                        1.66992188e-01,
                        1.44653320e-02,
                        -4.23828125e-01,
                        1.86523438e-01,
                        -8.44726562e-02,
                        -7.51953125e-02,
                        -3.82812500e-01,
                        8.20312500e-02,
                        4.33349609e-03,
                        -2.03125000e-01,
                        1.06933594e-01,
                        3.04687500e-01,
                        -7.08007812e-02,
                        -1.13769531e-01,
                        -2.04101562e-01,
                        -2.19726562e-01,
                        -2.89306641e-02,
                        2.29492188e-01,
                        -7.37304688e-02,
                        -3.57055664e-03,
                        3.41796875e-01,
                        2.50000000e-01,
                        3.97949219e-02,
                        -1.09375000e-01,
                        -9.52148438e-02,
                        2.33398438e-01,
                        1.55639648e-02,
                        -1.67968750e-01,
                        -4.76074219e-03,
                        1.49414062e-01,
                        8.30078125e-02,
                        1.32812500e-01,
                        1.06933594e-01,
                        1.27929688e-01,
                        1.59179688e-01,
                        3.02734375e-01,
                        -4.68750000e-01,
                        -8.00781250e-02,
                        2.53906250e-01,
                        1.02050781e-01,
                        -2.47070312e-01,
                        3.58886719e-02,
                        -3.66210938e-02,
                        -1.53320312e-01,
                        1.09375000e-01,
                        -2.62451172e-02,
                        3.32031250e-01,
                        2.27539062e-01,
                        -1.99218750e-01,
                        8.83789062e-02,
                        -1.87683105e-03,
                        -2.63671875e-01,
                        3.78906250e-01,
                        -1.75781250e-02,
                        -2.85156250e-01,
                        3.75000000e-01,
                        9.52148438e-02,
                        -3.24218750e-01,
                        -1.31835938e-01,
                        -8.44726562e-02,
                        8.72802734e-03,
                        -1.83593750e-01,
                        2.59765625e-01,
                        7.95898438e-02,
                        -1.55273438e-01,
                        -1.18652344e-01,
                        -8.10546875e-02,
                        3.47656250e-01,
                        1.92382812e-01,
                        5.44433594e-02,
                        4.32128906e-02,
                        7.12890625e-02,
                        -1.55273438e-01,
                        -4.27734375e-01,
                        -1.31835938e-01,
                        -5.76171875e-02,
                        3.55468750e-01,
                        1.67968750e-01,
                        1.03027344e-01,
                        2.02148438e-01,
                        3.14941406e-02,
                        -4.02832031e-02,
                        2.21679688e-01,
                        1.23535156e-01,
                        -1.82617188e-01,
                        1.56250000e-01,
                        3.88183594e-02,
                        -9.66796875e-02,
                        1.80664062e-01,
                        -2.70996094e-02,
                        1.94091797e-02,
                        3.08593750e-01,
                        -5.56640625e-02,
                        -3.67187500e-01,
                        -5.15136719e-02,
                        -1.69677734e-02,
                        -3.85742188e-02,
                        3.69140625e-01,
                        -2.36816406e-02,
                        -2.30712891e-02,
                        7.71484375e-02,
                        -2.42187500e-01,
                        -8.00781250e-02,
                        6.00585938e-02,
                        -1.97265625e-01,
                        4.49218750e-01,
                        -1.16210938e-01,
                        4.27246094e-02,
                        -1.12304688e-01,
                        1.45507812e-01,
                        -2.46093750e-01,
                        -2.92968750e-01,
                        -8.83789062e-02,
                        2.63671875e-01,
                        1.66992188e-01,
                        -1.23291016e-02,
                        1.14746094e-01,
                        -7.42187500e-02,
                        -2.16064453e-02,
                        2.16796875e-01,
                        -2.50000000e-01,
                        -6.68334961e-03,
                        -1.02539062e-01,
                        -2.50000000e-01,
                        -2.15820312e-01,
                        4.68750000e-02,
                        1.36718750e-01,
                        -6.68945312e-02,
                        -2.27539062e-01,
                        -3.76953125e-01,
                        -8.49609375e-02,
                        -2.14843750e-01,
                        3.73046875e-01,
                        4.00390625e-01,
                        -2.20703125e-01,
                        -2.87109375e-01,
                        1.12792969e-01,
                        1.94335938e-01,
                        -1.81884766e-02,
                        -2.20947266e-02,
                        3.62396240e-05,
                        9.64355469e-03,
                        2.61718750e-01,
                        1.71875000e-01,
                        -5.85937500e-02,
                        -1.23046875e-01,
                        -1.10351562e-01,
                        6.93359375e-02,
                        -1.06933594e-01,
                        2.14843750e-01,
                        -8.88671875e-02,
                        -1.47460938e-01,
                        1.67968750e-01,
                        2.15820312e-01,
                        -2.57812500e-01,
                        -4.24804688e-02,
                        -2.81250000e-01,
                        2.28515625e-01,
                        -2.69531250e-01,
                        3.93066406e-02,
                        8.39843750e-02,
                        -2.81250000e-01,
                        -1.36108398e-02,
                        2.17773438e-01,
                        -3.59375000e-01,
                        -4.73632812e-02,
                        1.41601562e-01,
                        8.69140625e-02,
                        2.81982422e-02,
                        2.83203125e-01,
                        1.21582031e-01,
                        -4.22363281e-02,
                        4.41894531e-02,
                        1.89208984e-02,
                        2.40234375e-01,
                        4.32128906e-02,
                        2.71484375e-01,
                        7.47070312e-02,
                        7.32421875e-02,
                        2.77343750e-01,
                        -6.34765625e-02,
                        -3.36914062e-02,
                        -1.25976562e-01,
                        -1.35742188e-01,
                        -1.45507812e-01,
                        -4.88281250e-01,
                        1.95312500e-02,
                        -1.62109375e-01,
                        -1.91406250e-01,
                        5.12695312e-02,
                        3.66210938e-02,
                        1.98242188e-01,
                        -7.86132812e-02,
                        -1.44531250e-01,
                        3.63281250e-01,
                        6.88476562e-02,
                        2.03125000e-01,
                        1.77001953e-02,
                        -2.46093750e-01,
                        5.98144531e-02,
                        -2.10937500e-01,
                        -1.38671875e-01,
                        9.47265625e-02,
                        8.74023438e-02,
                        -6.83593750e-02,
                        1.02050781e-01,
                        2.63671875e-01,
                        -8.96453857e-04,
                        -2.65625000e-01,
                        4.98046875e-02,
                        1.68945312e-01,
                        2.85156250e-01,
                        -4.00390625e-02,
                        2.16796875e-01,
                        -2.55126953e-02,
                        -2.75390625e-01,
                        -1.70898438e-02,
                        3.43750000e-01,
                        -2.57812500e-01,
                        -3.73535156e-02,
                        9.91210938e-02,
                        2.25585938e-01,
                        -1.04980469e-01,
                        1.53320312e-01,
                        1.10839844e-01,
                        -1.70898438e-01,
                        -2.91015625e-01,
                        8.00781250e-02,
                        -2.17285156e-02,
                        -1.03027344e-01,
                        -2.43164062e-01,
                        4.22363281e-02,
                        1.18164062e-01,
                        -2.05078125e-01,
                        -1.94091797e-02,
                        2.14843750e-02,
                        -4.73632812e-02,
                        1.11816406e-01,
                        1.20117188e-01,
                        6.83593750e-02,
                        -2.96875000e-01,
                        1.34765625e-01,
                        -4.10156250e-01,
                        1.88476562e-01,
                        -5.34057617e-03,
                        -1.25976562e-01,
                        1.94335938e-01,
                        -1.45874023e-02,
                        1.31835938e-01,
                        -4.45312500e-01,
                        -2.14843750e-01,
                        -7.87353516e-03,
                        -1.63085938e-01,
                        -1.26953125e-01,
                        1.39648438e-01,
                        6.20117188e-02,
                        2.71484375e-01,
                        -1.65039062e-01,
                        -1.19628906e-01,
                        -1.09375000e-01,
                        1.36718750e-01,
                        2.08007812e-01,
                        6.15234375e-02,
                        -1.59179688e-01,
                        4.98046875e-02,
                        -2.63671875e-01,
                        3.06640625e-01,
                        -4.12109375e-01,
                        -1.23901367e-02,
                        -2.14843750e-02,
                        4.29687500e-02,
                        2.94921875e-01,
                        -5.00488281e-02,
                        1.14257812e-01,
                        -1.25976562e-01,
                        -1.31835938e-01,
                        1.32812500e-01,
                        -2.87109375e-01,
                        -2.50000000e-01,
                        -9.03320312e-02,
                        -2.08984375e-01,
                        -2.23632812e-01,
                        -6.83593750e-03,
                    ]
                ),
                "Y_0": np.array(
                    [
                        -2.72983e-02,
                        2.32864e-02,
                        -8.44774e-02,
                        1.13301e-01,
                        -7.38911e-02,
                        1.38015e-02,
                        -8.03088e-02,
                        -8.59674e-02,
                        -2.72294e-02,
                        -2.83763e-02,
                        -8.19665e-02,
                        3.68599e-02,
                        -8.16813e-02,
                        3.48533e-02,
                        -3.53995e-02,
                        -6.39298e-02,
                        1.47446e-02,
                        -1.12933e-02,
                        3.38359e-02,
                        7.77425e-02,
                        4.38122e-02,
                        -7.38992e-02,
                        -6.14364e-02,
                        -6.77203e-02,
                        -1.35519e-01,
                        2.36043e-02,
                        -1.09924e-02,
                        2.57447e-02,
                        -3.53147e-03,
                        1.30257e-02,
                        2.33308e-02,
                        5.45700e-03,
                        -7.70641e-03,
                        8.50190e-02,
                        5.11435e-02,
                        -1.23282e-02,
                        1.85567e-02,
                        -5.10888e-02,
                        6.40572e-02,
                        -1.16286e-01,
                        -5.74862e-02,
                        -6.93814e-02,
                        1.09302e-01,
                        -8.29324e-03,
                        4.74347e-02,
                        -7.09730e-02,
                        -4.02888e-02,
                        1.34229e-01,
                        -3.89523e-02,
                        -4.92327e-02,
                        -3.13852e-02,
                        -4.56260e-02,
                        1.15605e-04,
                        1.41700e-02,
                        -1.06912e-01,
                        -2.94382e-02,
                        5.66014e-02,
                        6.86608e-02,
                        -4.71672e-02,
                        7.61888e-02,
                        -3.55937e-02,
                        9.39930e-03,
                        2.84483e-02,
                        4.48446e-02,
                        -2.89984e-02,
                        2.31505e-02,
                        -5.04147e-02,
                        4.52748e-02,
                        -6.19359e-02,
                        -5.02584e-02,
                        5.45369e-02,
                        -7.28158e-02,
                        -2.90545e-02,
                        1.79804e-02,
                        3.83495e-02,
                        1.00996e-01,
                        2.44067e-02,
                        3.82958e-02,
                        -6.71955e-02,
                        -4.93266e-02,
                        5.40571e-02,
                        -6.69754e-02,
                        -1.03550e-01,
                        6.08544e-02,
                        -6.79181e-02,
                        -5.83149e-03,
                        2.82952e-02,
                        5.29130e-02,
                        8.20327e-02,
                        -3.60179e-02,
                        -1.66308e-02,
                        -5.73064e-02,
                        8.35340e-02,
                        -4.01776e-03,
                        1.08742e-01,
                        7.08028e-02,
                        4.70980e-02,
                        -7.44919e-02,
                        8.04635e-03,
                        -5.38229e-02,
                        1.41596e-02,
                        -4.29162e-02,
                        -6.59591e-02,
                        2.12492e-03,
                        1.13744e-01,
                        3.90875e-02,
                        -7.11847e-02,
                        -4.60775e-03,
                        -6.25940e-02,
                        -3.79695e-02,
                        4.00976e-02,
                        -3.13607e-02,
                        -5.70006e-03,
                        -7.01409e-02,
                        -3.40753e-02,
                        -3.51557e-02,
                        8.15816e-02,
                        -3.69575e-02,
                        3.97849e-02,
                        7.06816e-02,
                        4.79090e-02,
                        -2.82474e-02,
                        -3.36127e-02,
                        3.29606e-02,
                        1.27084e-02,
                        -1.05190e-01,
                        -6.04178e-02,
                        1.96435e-02,
                        1.34118e-01,
                        2.51712e-02,
                        6.61315e-04,
                        -9.48316e-03,
                        -1.96935e-02,
                        8.98894e-02,
                        -1.99741e-02,
                        -3.43393e-02,
                        -6.45761e-02,
                        4.25499e-02,
                        -3.38725e-02,
                        3.78759e-03,
                        -2.76880e-02,
                        1.02241e-01,
                        3.46125e-02,
                        -5.90162e-03,
                        1.55213e-02,
                        -6.04307e-03,
                        7.60900e-02,
                        -1.43205e-02,
                        -3.64721e-02,
                        -3.05862e-02,
                        1.16142e-01,
                        -3.69746e-02,
                        -4.18880e-02,
                        2.87228e-02,
                        -2.29893e-02,
                        -1.56961e-02,
                        4.52744e-02,
                        1.85539e-02,
                        9.44295e-02,
                        -2.93397e-02,
                        -9.62157e-03,
                        -9.95795e-02,
                        -4.49313e-02,
                        9.15247e-02,
                        7.20162e-02,
                        -1.24225e-02,
                        -1.19730e-02,
                        -5.53540e-02,
                        -2.17161e-02,
                        2.16680e-02,
                        -7.70021e-02,
                        -3.79013e-02,
                        -1.68846e-02,
                        -8.76742e-02,
                        3.60010e-02,
                        5.16727e-02,
                        4.96537e-02,
                        -1.28544e-01,
                        2.92686e-02,
                        -7.50497e-02,
                        -1.77561e-02,
                        3.15034e-02,
                        -5.71408e-02,
                        -3.76603e-02,
                        -3.58281e-02,
                        -1.27039e-02,
                        4.74589e-02,
                        2.74414e-02,
                        3.62151e-02,
                        -1.02107e-02,
                        2.09074e-02,
                        -5.14358e-02,
                        3.06982e-02,
                        -5.78255e-02,
                        -3.70942e-03,
                        -1.03504e-02,
                        -3.73158e-02,
                        3.52580e-02,
                        -3.67715e-02,
                        -6.90153e-02,
                        9.06838e-02,
                        8.08479e-02,
                        7.52826e-02,
                        1.17949e-01,
                        -4.23761e-02,
                        -2.68956e-02,
                        4.63275e-03,
                        -7.94776e-02,
                        4.61037e-02,
                        -2.60992e-02,
                        1.14842e-01,
                        9.42581e-03,
                        6.75459e-02,
                        -5.95658e-02,
                        -2.73865e-02,
                        -7.84019e-03,
                        -3.12080e-02,
                        -1.54366e-01,
                        3.96091e-02,
                        3.73675e-02,
                        5.73669e-02,
                        5.47703e-02,
                        -7.03500e-02,
                        1.59465e-02,
                        -1.33694e-02,
                        -9.89138e-02,
                        -4.73152e-02,
                        -2.58365e-02,
                        1.62013e-02,
                        -6.39790e-02,
                        -6.89905e-02,
                        -8.80604e-02,
                        1.77315e-03,
                        -5.68294e-02,
                        6.09149e-02,
                        1.17130e-02,
                        -9.58037e-03,
                        -2.61610e-02,
                        -7.30250e-02,
                        -8.78414e-02,
                        9.64982e-02,
                        7.23185e-02,
                        3.18768e-02,
                        4.32823e-02,
                        -1.22037e-01,
                        -1.47360e-02,
                        5.34961e-03,
                        -9.15485e-02,
                        -8.55658e-02,
                        -6.59054e-02,
                        1.61546e-02,
                        -8.69586e-02,
                        -5.29306e-02,
                        4.25848e-02,
                        1.17799e-01,
                        1.44888e-02,
                        -2.26423e-03,
                        -8.93532e-02,
                        -8.51717e-02,
                        1.00520e-02,
                        -8.82273e-02,
                        5.32898e-02,
                        -2.02092e-02,
                        -3.44455e-02,
                        -1.15132e-01,
                        -6.86492e-03,
                        3.26924e-02,
                        -7.58881e-02,
                        -1.29139e-02,
                        5.10263e-02,
                        -2.28315e-02,
                        -1.71089e-02,
                        -1.69831e-02,
                        6.97719e-02,
                        -1.50033e-01,
                        1.27395e-02,
                        2.43388e-02,
                        1.12053e-01,
                        2.80908e-02,
                        -9.15509e-03,
                        9.33267e-03,
                        -1.89562e-02,
                        -6.49727e-02,
                        -7.33889e-02,
                        4.21508e-02,
                        2.53110e-02,
                        -2.53090e-02,
                        1.00473e-02,
                        -1.07237e-01,
                        8.73709e-02,
                        5.02563e-02,
                        -2.95898e-02,
                        7.15653e-02,
                        1.78010e-03,
                        2.34280e-02,
                        -7.74828e-02,
                        -7.57647e-02,
                        1.74428e-02,
                        1.60508e-02,
                        7.79456e-02,
                    ]
                ),
                "X_shape": (1438, 300),
                "Y_shape": (1438, 300),
                "X_last": np.array(
                    [
                        3.66210938e-02,
                        3.39355469e-02,
                        -5.51757812e-02,
                        5.61523438e-02,
                        7.65991211e-03,
                        9.21630859e-03,
                        -5.05371094e-02,
                        -9.27734375e-02,
                        -5.76171875e-02,
                        4.63867188e-02,
                        -1.31835938e-01,
                        -1.43554688e-01,
                        -1.09863281e-01,
                        -1.83105469e-02,
                        -3.56445312e-02,
                        4.29687500e-02,
                        3.19824219e-02,
                        2.96630859e-02,
                        1.74560547e-02,
                        -6.88476562e-02,
                        -4.85839844e-02,
                        -1.70898438e-01,
                        2.14843750e-01,
                        -2.79541016e-02,
                        -5.61523438e-02,
                        3.75747681e-04,
                        -7.37304688e-02,
                        1.28173828e-02,
                        5.39550781e-02,
                        -2.55126953e-02,
                        -4.93164062e-02,
                        -5.63964844e-02,
                        4.90722656e-02,
                        -6.59179688e-02,
                        -1.06933594e-01,
                        -3.01513672e-02,
                        7.03125000e-02,
                        1.24511719e-01,
                        1.39648438e-01,
                        -4.85839844e-02,
                        2.52685547e-02,
                        -8.00781250e-02,
                        1.03515625e-01,
                        4.15039062e-02,
                        9.76562500e-02,
                        -1.74560547e-02,
                        1.55273438e-01,
                        -7.17773438e-02,
                        -1.56250000e-01,
                        9.47265625e-02,
                        -5.05371094e-02,
                        1.36108398e-02,
                        6.29882812e-02,
                        1.02539062e-01,
                        2.73437500e-02,
                        1.28906250e-01,
                        -5.66406250e-02,
                        -3.90625000e-03,
                        4.17480469e-02,
                        -9.17968750e-02,
                        -5.63964844e-02,
                        9.08203125e-02,
                        -5.82885742e-03,
                        -3.90625000e-02,
                        -6.78710938e-02,
                        -1.68945312e-01,
                        2.64892578e-02,
                        -1.26953125e-01,
                        -6.88476562e-02,
                        3.68652344e-02,
                        1.13769531e-01,
                        8.78906250e-02,
                        2.44140625e-02,
                        -4.34570312e-02,
                        -1.34277344e-02,
                        3.29589844e-02,
                        1.03149414e-02,
                        -1.23535156e-01,
                        7.66601562e-02,
                        -1.61132812e-02,
                        -9.88769531e-03,
                        8.93554688e-02,
                        -2.68554688e-02,
                        -1.58203125e-01,
                        1.86523438e-01,
                        6.15234375e-02,
                        8.49609375e-02,
                        4.88281250e-02,
                        1.47460938e-01,
                        -1.08886719e-01,
                        -3.32031250e-02,
                        9.37500000e-02,
                        -5.66406250e-02,
                        4.46777344e-02,
                        -1.89453125e-01,
                        1.67968750e-01,
                        3.24707031e-02,
                        -2.99072266e-02,
                        3.58886719e-02,
                        4.51660156e-02,
                        -1.43554688e-01,
                        1.11328125e-01,
                        8.15429688e-02,
                        -3.41796875e-02,
                        -8.72802734e-03,
                        1.67968750e-01,
                        -4.12597656e-02,
                        1.84570312e-01,
                        -3.66210938e-02,
                        -5.12695312e-03,
                        -9.22851562e-02,
                        -1.30859375e-01,
                        7.76367188e-02,
                        -3.29589844e-02,
                        1.19628906e-01,
                        -1.83593750e-01,
                        -3.73535156e-02,
                        -4.07714844e-02,
                        -1.68457031e-02,
                        6.98242188e-02,
                        -4.22363281e-02,
                        8.59375000e-02,
                        -8.88671875e-02,
                        -3.83300781e-02,
                        3.36914062e-02,
                        -6.29882812e-02,
                        -1.00585938e-01,
                        1.03027344e-01,
                        4.58984375e-02,
                        -4.68750000e-02,
                        -8.15429688e-02,
                        -2.60009766e-02,
                        1.02539062e-01,
                        1.26953125e-01,
                        -1.67236328e-02,
                        -4.37011719e-02,
                        -8.69140625e-02,
                        -3.93066406e-02,
                        1.88476562e-01,
                        1.38671875e-01,
                        1.66992188e-01,
                        -1.01074219e-01,
                        -1.83105469e-02,
                        -9.81445312e-02,
                        -5.68847656e-02,
                        6.25000000e-02,
                        -3.17382812e-02,
                        -4.73632812e-02,
                        -7.01904297e-03,
                        -1.88476562e-01,
                        7.76367188e-02,
                        -1.44531250e-01,
                        -7.27539062e-02,
                        1.83582306e-05,
                        -7.95898438e-02,
                        -9.71679688e-02,
                        4.46777344e-02,
                        6.83593750e-02,
                        1.90429688e-02,
                        4.32128906e-02,
                        -2.02636719e-02,
                        5.46875000e-02,
                        -3.51562500e-02,
                        1.77764893e-03,
                        5.61523438e-03,
                        -9.71679688e-02,
                        1.79687500e-01,
                        -6.59179688e-02,
                        -2.25585938e-01,
                        1.09863281e-01,
                        -1.18164062e-01,
                        1.17187500e-01,
                        -6.78710938e-02,
                        1.01074219e-01,
                        -7.86132812e-02,
                        -9.46044922e-03,
                        7.51953125e-02,
                        -9.13085938e-02,
                        1.97753906e-02,
                        -5.51757812e-02,
                        -1.32812500e-01,
                        -9.32617188e-02,
                        2.95410156e-02,
                        8.34960938e-02,
                        3.00292969e-02,
                        -5.58471680e-03,
                        5.90820312e-02,
                        3.41796875e-02,
                        1.25976562e-01,
                        -1.55029297e-02,
                        1.57470703e-02,
                        7.03125000e-02,
                        -2.18750000e-01,
                        8.88671875e-02,
                        1.07910156e-01,
                        9.08203125e-02,
                        -2.21679688e-01,
                        4.73632812e-02,
                        3.88183594e-02,
                        6.64062500e-02,
                        -5.54199219e-02,
                        -6.92749023e-03,
                        -3.00292969e-02,
                        -9.37500000e-02,
                        3.85742188e-02,
                        -3.11279297e-02,
                        -3.32031250e-02,
                        9.66796875e-02,
                        -1.12304688e-01,
                        -7.41577148e-03,
                        -2.28271484e-02,
                        -6.59179688e-02,
                        -9.86328125e-02,
                        -6.59179688e-02,
                        -1.82617188e-01,
                        8.39843750e-02,
                        -4.22363281e-02,
                        -2.24609375e-01,
                        -4.34570312e-02,
                        4.83398438e-02,
                        -2.40478516e-02,
                        -9.96093750e-02,
                        3.97949219e-02,
                        1.39648438e-01,
                        -1.84326172e-02,
                        -4.76074219e-02,
                        3.06396484e-02,
                        -4.73632812e-02,
                        4.37011719e-02,
                        5.24902344e-02,
                        3.44238281e-02,
                        -1.01562500e-01,
                        -7.76367188e-02,
                        -2.39257812e-02,
                        -7.22656250e-02,
                        -2.56347656e-02,
                        1.46484375e-01,
                        -3.29589844e-02,
                        1.34887695e-02,
                        1.28906250e-01,
                        2.92968750e-02,
                        -2.42614746e-03,
                        2.52685547e-02,
                        1.48315430e-02,
                        -1.26953125e-01,
                        8.05664062e-03,
                        -9.03320312e-02,
                        2.72216797e-02,
                        -1.66015625e-02,
                        1.52587891e-02,
                        1.33789062e-01,
                        3.73535156e-02,
                        1.08398438e-01,
                        1.86523438e-01,
                        1.59179688e-01,
                        -1.22070312e-01,
                        -4.61425781e-02,
                        -6.25000000e-02,
                        2.67333984e-02,
                        -4.76074219e-02,
                        4.83398438e-02,
                        -5.05371094e-02,
                        7.12890625e-02,
                        2.07519531e-02,
                        -5.41992188e-02,
                        4.41894531e-02,
                        -2.51464844e-02,
                        -2.38037109e-02,
                        1.32812500e-01,
                        -1.45263672e-02,
                        -7.61718750e-02,
                        -8.54492188e-03,
                        -6.73828125e-02,
                        3.61328125e-02,
                        3.73535156e-02,
                        -4.18090820e-03,
                        -2.45361328e-02,
                        -1.95312500e-01,
                        -7.38525391e-03,
                        1.60156250e-01,
                        -3.51562500e-02,
                        -7.42187500e-02,
                        8.74023438e-02,
                        4.22363281e-02,
                        -9.32617188e-02,
                        -5.98144531e-02,
                        -1.32446289e-02,
                        3.27148438e-02,
                        3.95507812e-02,
                        -2.15148926e-03,
                        8.64257812e-02,
                        4.95605469e-02,
                        2.72216797e-02,
                        9.91210938e-02,
                        -1.89453125e-01,
                        -1.07421875e-01,
                        -1.26953125e-01,
                        -1.39648438e-01,
                        -4.78515625e-02,
                        1.01562500e-01,
                    ]
                ),
                "Y_last": np.array(
                    [
                        -5.77526e-02,
                        1.85741e-03,
                        -7.52259e-02,
                        -1.28851e-02,
                        1.92883e-02,
                        -2.25487e-02,
                        -2.10989e-02,
                        -9.87019e-02,
                        3.21477e-02,
                        2.86972e-02,
                        -5.67289e-03,
                        -1.04581e-02,
                        -6.45079e-02,
                        5.32728e-02,
                        -2.42912e-02,
                        1.12173e-01,
                        -1.03624e-02,
                        -8.20203e-02,
                        6.31817e-04,
                        9.36484e-02,
                        -1.08431e-01,
                        9.05572e-02,
                        7.82042e-03,
                        -4.79863e-03,
                        5.42205e-02,
                        -1.70433e-02,
                        6.75339e-03,
                        4.52988e-02,
                        1.03181e-02,
                        8.60671e-02,
                        2.85380e-03,
                        -5.92744e-02,
                        -2.96414e-02,
                        9.89158e-03,
                        4.63614e-02,
                        -4.93189e-02,
                        -2.58588e-03,
                        -5.64051e-02,
                        5.57641e-02,
                        -1.31373e-01,
                        -6.66798e-02,
                        5.86357e-02,
                        3.65854e-02,
                        5.16057e-02,
                        3.77766e-02,
                        -9.84840e-02,
                        -1.29503e-02,
                        8.50861e-04,
                        1.65507e-02,
                        1.21085e-04,
                        -2.37339e-02,
                        3.58840e-02,
                        -6.95496e-02,
                        -5.81121e-04,
                        3.83839e-02,
                        1.34409e-01,
                        5.41432e-02,
                        9.47498e-02,
                        -6.57966e-02,
                        7.51977e-02,
                        5.29582e-02,
                        3.34519e-03,
                        1.03325e-01,
                        2.34650e-03,
                        -1.89486e-02,
                        -2.22029e-02,
                        3.91321e-02,
                        1.28535e-02,
                        -3.48131e-02,
                        -5.21459e-02,
                        8.39915e-02,
                        -5.68223e-02,
                        6.84851e-02,
                        -6.58898e-02,
                        -2.95572e-02,
                        4.57156e-02,
                        6.85392e-02,
                        7.55081e-02,
                        -4.01452e-02,
                        5.81298e-02,
                        -9.59204e-03,
                        -1.75320e-02,
                        6.74183e-02,
                        -5.62457e-02,
                        -1.57636e-02,
                        -1.06042e-01,
                        5.68241e-02,
                        2.19836e-02,
                        1.06867e-01,
                        -8.93954e-03,
                        2.65839e-02,
                        -1.11708e-01,
                        6.51080e-02,
                        -2.19363e-03,
                        2.51836e-02,
                        7.52258e-02,
                        -1.78914e-02,
                        -7.66893e-02,
                        -2.45396e-02,
                        2.02453e-02,
                        -9.04258e-02,
                        -3.61780e-02,
                        4.45890e-02,
                        8.21192e-02,
                        -2.94380e-02,
                        3.42934e-02,
                        1.50248e-02,
                        -2.99220e-02,
                        1.54482e-01,
                        -3.17956e-02,
                        -1.33875e-02,
                        -8.32181e-02,
                        -4.92987e-02,
                        -8.98398e-02,
                        1.12654e-02,
                        9.40545e-03,
                        2.13102e-02,
                        4.22823e-02,
                        -3.25464e-02,
                        2.95527e-02,
                        4.53487e-02,
                        -4.07182e-02,
                        -2.29429e-02,
                        2.82882e-02,
                        4.22309e-02,
                        1.14032e-03,
                        -3.16745e-02,
                        8.04029e-02,
                        1.77140e-02,
                        -8.29923e-03,
                        -2.57610e-02,
                        1.92130e-02,
                        7.57291e-02,
                        -3.02384e-02,
                        -3.12848e-03,
                        -1.02390e-02,
                        -6.42703e-02,
                        -3.28658e-02,
                        -6.85977e-02,
                        2.10663e-02,
                        -2.64023e-02,
                        4.73971e-03,
                        -6.23625e-02,
                        -6.25103e-02,
                        4.20904e-03,
                        -1.47395e-02,
                        1.53224e-02,
                        -8.14250e-02,
                        -1.67138e-02,
                        -2.48303e-02,
                        5.54890e-02,
                        -1.27047e-01,
                        -1.06941e-01,
                        -5.44983e-02,
                        -2.95574e-02,
                        8.86192e-02,
                        -1.36047e-02,
                        -5.70829e-02,
                        -2.83603e-02,
                        4.94210e-02,
                        5.63040e-02,
                        6.63099e-02,
                        -8.73293e-02,
                        9.04359e-02,
                        -5.72972e-03,
                        7.63502e-02,
                        -2.21774e-02,
                        -2.32646e-02,
                        -9.67783e-03,
                        -3.93003e-02,
                        -7.85513e-03,
                        -1.04940e-01,
                        -3.25078e-02,
                        -2.12695e-02,
                        -3.84192e-02,
                        4.53195e-02,
                        -2.87945e-02,
                        3.24406e-02,
                        -3.73943e-02,
                        -1.19633e-01,
                        -5.24694e-03,
                        4.58550e-02,
                        -9.94224e-02,
                        6.43022e-04,
                        8.26000e-03,
                        4.43038e-02,
                        3.56619e-02,
                        -1.29367e-03,
                        9.54348e-04,
                        -4.99322e-02,
                        1.29133e-02,
                        -6.92165e-02,
                        -8.54837e-02,
                        8.43752e-02,
                        -8.41418e-03,
                        1.56296e-01,
                        6.16377e-03,
                        7.01540e-02,
                        -1.10909e-01,
                        4.97737e-04,
                        3.40430e-02,
                        4.74980e-02,
                        6.34547e-03,
                        8.24465e-03,
                        1.62376e-02,
                        -9.57567e-02,
                        -4.02370e-02,
                        -2.44696e-02,
                        1.50294e-01,
                        4.64095e-02,
                        1.50204e-01,
                        -1.62528e-02,
                        -4.88624e-02,
                        -4.14448e-02,
                        -3.96881e-02,
                        1.87279e-02,
                        2.28923e-02,
                        -1.33509e-01,
                        -4.06437e-02,
                        -1.87602e-02,
                        -7.71820e-02,
                        3.42395e-02,
                        6.73895e-02,
                        3.31408e-02,
                        -9.74174e-02,
                        4.63902e-02,
                        -4.42937e-02,
                        -5.66643e-02,
                        -2.26123e-02,
                        -6.29002e-03,
                        4.48326e-02,
                        2.95760e-02,
                        5.75200e-02,
                        -1.90784e-02,
                        -3.49958e-02,
                        2.10214e-02,
                        -5.34576e-02,
                        -3.52303e-02,
                        -1.54576e-02,
                        -4.52433e-02,
                        -4.60209e-02,
                        2.81135e-02,
                        1.03783e-01,
                        9.60060e-02,
                        4.31531e-02,
                        -1.70124e-02,
                        -1.06518e-01,
                        9.22672e-02,
                        2.73850e-02,
                        -3.91556e-02,
                        1.37372e-02,
                        3.06065e-02,
                        -8.46547e-03,
                        9.71862e-02,
                        7.52572e-03,
                        -3.02036e-02,
                        -5.34406e-02,
                        2.59111e-02,
                        8.23819e-02,
                        -1.66705e-02,
                        -3.72958e-02,
                        7.32007e-02,
                        7.30424e-02,
                        -4.31092e-02,
                        -6.29097e-02,
                        -1.37463e-01,
                        4.26192e-02,
                        3.76883e-02,
                        -3.03760e-02,
                        -3.24406e-02,
                        5.11576e-02,
                        -5.99612e-02,
                        2.76120e-02,
                        3.00992e-03,
                        1.08090e-01,
                        -6.28470e-02,
                        4.20876e-02,
                        2.98201e-02,
                        1.29736e-01,
                        -3.73956e-02,
                        6.41041e-02,
                        1.61378e-02,
                        -2.33515e-02,
                        1.26556e-01,
                        2.14087e-02,
                        6.67492e-02,
                        5.33819e-02,
                        4.80713e-02,
                        -3.20332e-02,
                        -1.85613e-02,
                        -1.27190e-06,
                        -7.36985e-02,
                        6.68751e-02,
                        -9.03173e-03,
                        1.25703e-01,
                        -1.41829e-01,
                        -3.95500e-02,
                        -3.43118e-02,
                        1.40071e-02,
                        -1.72464e-02,
                    ]
                ),
            },
        },
    ]

    for test_case in test_cases:
        result_x, result_y = target(**test_case["input"])

        try:
            assert isinstance(result_x, np.ndarray)
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": type(test_case["expected"]["X_0"]),
                    "got": type(result_x),
                }
            )
            print(
                f"Wrong output type for X matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert isinstance(result_y, np.ndarray)
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": type(test_case["expected"]["Y_0"]),
                    "got": type(result_y),
                }
            )
            print(
                f"Wrong output type for Y matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(result_x[0], test_case["expected"]["X_0"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["X_0"][:10],
                    "got": result_x[0][:10],
                }
            )
            print(
                f"Wrong output values for X matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(result_y[0], test_case["expected"]["Y_0"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["Y_0"][:10],
                    "got": result_y[0][:10],
                }
            )
            print(
                f"Wrong output values for Y matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert result_x.shape == test_case["expected"]["X_shape"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["X_shape"],
                    "got": result_x.shape,
                }
            )
            print(
                f"Wrong shape for X matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert result_y.shape == test_case["expected"]["Y_shape"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["Y_shape"],
                    "got": result_y.shape,
                }
            )
            print(
                f"Wrong shape for Y matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(result_x[-1], test_case["expected"]["X_last"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["X_last"][:10],
                    "got": result_x[-1][:10],
                }
            )
            print(
                f"Wrong output values for X matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(result_y[-1], test_case["expected"]["Y_last"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["Y_last"][:10],
                    "got": result_y[-1][:10],
                }
            )
            print(
                f"Wrong output values for Y matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_compute_loss(target):
    successful_cases = 0
    failed_cases = []

    test_cases = [
        {
            "name": "default_check",
            "input": {
                "X": np.array(
                    [
                        [0.69646919, 0.28613933, 0.22685145, 0.55131477, 0.71946897],
                        [0.42310646, 0.9807642, 0.68482974, 0.4809319, 0.39211752],
                        [0.34317802, 0.72904971, 0.43857224, 0.0596779, 0.39804426],
                        [0.73799541, 0.18249173, 0.17545176, 0.53155137, 0.53182759],
                        [0.63440096, 0.84943179, 0.72445532, 0.61102351, 0.72244338],
                        [0.32295891, 0.36178866, 0.22826323, 0.29371405, 0.63097612],
                        [0.09210494, 0.43370117, 0.43086276, 0.4936851, 0.42583029],
                        [0.31226122, 0.42635131, 0.89338916, 0.94416002, 0.50183668],
                        [0.62395295, 0.1156184, 0.31728548, 0.41482621, 0.86630916],
                        [0.25045537, 0.48303426, 0.98555979, 0.51948512, 0.61289453],
                    ]
                ),
                "Y": np.array(
                    [
                        [0.01206287, 0.08263408, 0.06030601, 0.0545068, 0.03427638],
                        [0.03041208, 0.04170222, 0.06813008, 0.08754568, 0.05104223],
                        [0.06693138, 0.05859366, 0.06249035, 0.06746891, 0.08423424],
                        [0.0083195, 0.07636828, 0.02436664, 0.0194223, 0.0572457],
                        [0.00957125, 0.08853268, 0.0627249, 0.07234164, 0.00161292],
                        [0.05944319, 0.05567852, 0.01589596, 0.01530705, 0.06955295],
                        [0.03187664, 0.06919703, 0.05543832, 0.03889506, 0.09251325],
                        [0.084167, 0.03573976, 0.00435915, 0.03047681, 0.03981857],
                        [0.07049588, 0.09953585, 0.03559149, 0.07625478, 0.05931769],
                        [0.06917018, 0.01511275, 0.03988763, 0.02408559, 0.0343456],
                    ]
                ),
                "R": np.array(
                    [
                        [0.51312815, 0.66662455, 0.10590849, 0.13089495, 0.32198061],
                        [0.66156434, 0.84650623, 0.55325734, 0.85445249, 0.38483781],
                        [0.3167879, 0.35426468, 0.17108183, 0.82911263, 0.33867085],
                        [0.55237008, 0.57855147, 0.52153306, 0.00268806, 0.98834542],
                        [0.90534158, 0.20763586, 0.29248941, 0.52001015, 0.90191137],
                    ]
                ),
            },
            "expected": 8.186626624823763,
        },
        {
            "name": "small_check",
            "input": {
                "X": np.array([[0.10]]),
                "Y": np.array([[0.20]]),
                "R": np.array([[0.30]]),
            },
            "expected": 0.028900000000000006,
        },
        {
            "name": "large_check",
            "input": {
                "X": np.array([[0.10, 0.1], [0.2, 0.4], [0.6, -0.2]]),
                "Y": np.array([[0.20, 0.4], [0.3, 0.5], [0.1, 0.0]]),
                "R": np.array([[0.30, -0.1], [-0.4, 0.2]]),
            },
            "expected": 0.19513333333333335,
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])

        try:
            assert np.isclose(result, test_case["expected"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"],
                    "got": result,
                }
            )
            print(
                f"Wrong output loss. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_compute_gradient(target):
    successful_cases = 0
    failed_cases = []

    test_cases = [
        {
            "name": "default_check",
            "input": {
                "X": np.array(
                    [
                        [0.69646919, 0.28613933, 0.22685145, 0.55131477, 0.71946897],
                        [0.42310646, 0.9807642, 0.68482974, 0.4809319, 0.39211752],
                        [0.34317802, 0.72904971, 0.43857224, 0.0596779, 0.39804426],
                        [0.73799541, 0.18249173, 0.17545176, 0.53155137, 0.53182759],
                        [0.63440096, 0.84943179, 0.72445532, 0.61102351, 0.72244338],
                        [0.32295891, 0.36178866, 0.22826323, 0.29371405, 0.63097612],
                        [0.09210494, 0.43370117, 0.43086276, 0.4936851, 0.42583029],
                        [0.31226122, 0.42635131, 0.89338916, 0.94416002, 0.50183668],
                        [0.62395295, 0.1156184, 0.31728548, 0.41482621, 0.86630916],
                        [0.25045537, 0.48303426, 0.98555979, 0.51948512, 0.61289453],
                    ]
                ),
                "Y": np.array(
                    [
                        [0.01206287, 0.08263408, 0.06030601, 0.0545068, 0.03427638],
                        [0.03041208, 0.04170222, 0.06813008, 0.08754568, 0.05104223],
                        [0.06693138, 0.05859366, 0.06249035, 0.06746891, 0.08423424],
                        [0.0083195, 0.07636828, 0.02436664, 0.0194223, 0.0572457],
                        [0.00957125, 0.08853268, 0.0627249, 0.07234164, 0.00161292],
                        [0.05944319, 0.05567852, 0.01589596, 0.01530705, 0.06955295],
                        [0.03187664, 0.06919703, 0.05543832, 0.03889506, 0.09251325],
                        [0.084167, 0.03573976, 0.00435915, 0.03047681, 0.03981857],
                        [0.07049588, 0.09953585, 0.03559149, 0.07625478, 0.05931769],
                        [0.06917018, 0.01511275, 0.03988763, 0.02408559, 0.0343456],
                    ]
                ),
                "R": np.array(
                    [
                        [0.51312815, 0.66662455, 0.10590849, 0.13089495, 0.32198061],
                        [0.66156434, 0.84650623, 0.55325734, 0.85445249, 0.38483781],
                        [0.3167879, 0.35426468, 0.17108183, 0.82911263, 0.33867085],
                        [0.55237008, 0.57855147, 0.52153306, 0.00268806, 0.98834542],
                        [0.90534158, 0.20763586, 0.29248941, 0.52001015, 0.90191137],
                    ]
                ),
            },
            "expected": np.array(
                [
                    [1.3498175, 1.11264981, 0.69626762, 0.98468499, 1.33828969],
                    [1.48402939, 1.3134471, 0.8269311, 1.27307285, 1.44181639],
                    [1.57868759, 1.3817686, 0.89039471, 1.35293657, 1.60202282],
                    [1.50368303, 1.27421294, 0.8258529, 1.16996514, 1.54811674],
                    [1.72780859, 1.41902443, 0.90765656, 1.31399276, 1.73329241],
                ]
            ),
        },
        {
            "name": "small_check",
            "input": {
                "X": np.array([[0.10]]),
                "Y": np.array([[0.20]]),
                "R": np.array([[0.30]]),
            },
            "expected": np.array([[-0.034]]),
        },
        {
            "name": "large_check",
            "input": {
                "X": np.array([[0.10, 0.1], [0.2, 0.4], [0.6, -0.2]]),
                "Y": np.array([[0.20, 0.4], [0.3, 0.5], [0.1, 0.0]]),
                "R": np.array([[0.30, -0.1], [-0.4, 0.2]]),
            },
            "expected": np.array([[-0.00333333, -0.12466667], [-0.142, -0.13]]),
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])

        try:
            assert result.shape == test_case["expected"].shape
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"].shape,
                    "got": result.shape,
                }
            )
            print(
                f"Wrong shape for gradient matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(result, test_case["expected"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"],
                    "got": result,
                }
            )
            print(
                f"Wrong output values for gradient matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_align_embeddings(target):
    successful_cases = 0
    failed_cases = []

    test_cases = [
        {
            "name": "default_check",
            "input": {
                "X": np.array(
                    [
                        [0.57053163, 0.26825978, 0.60529524, 0.08485638, 0.97365435],
                        [0.51633925, 0.88898933, 0.0973924, 0.08909037, 0.01842588],
                        [0.78425402, 0.02219408, 0.16195252, 0.42449592, 0.22851964],
                        [0.17774345, 0.86861078, 0.33408275, 0.80437326, 0.46245774],
                        [0.3755519, 0.64955325, 0.44143494, 0.16636594, 0.49207735],
                        [0.79337432, 0.09869404, 0.2810426, 0.39652654, 0.81000488],
                        [0.1523301, 0.37393728, 0.9452125, 0.59574785, 0.72800603],
                        [0.21238829, 0.32974222, 0.11960557, 0.18153431, 0.2164236],
                        [0.12539322, 0.96034526, 0.71677102, 0.19275559, 0.09343238],
                        [0.05759864, 0.07582363, 0.67205969, 0.30242147, 0.46522306],
                    ]
                ),
                "Y": np.array(
                    [
                        [0.0233235, 0.04843668, 0.08284301, 0.01447825, 0.04674289],
                        [0.00164, 0.03476209, 0.04132209, 0.02619716, 0.03767882],
                        [0.02736822, 0.0905283, 0.00564728, 0.06326545, 0.08689923],
                        [0.03768616, 0.07806676, 0.04601056, 0.04168253, 0.08640853],
                        [0.03573465, 0.06263811, 0.02605627, 0.09576452, 0.02241846],
                        [0.0690478, 0.05178494, 0.02649317, 0.01818275, 0.04840006],
                        [0.03277532, 0.02276209, 0.09912554, 0.00064027, 0.05491281],
                        [0.00834599, 0.05053472, 0.04568681, 0.02292083, 0.06566439],
                        [0.08895743, 0.09154556, 0.00046113, 0.08459362, 0.0608969],
                        [0.00460105, 0.0183352, 0.09005481, 0.01632413, 0.01361763],
                    ]
                ),
                "train_steps": 100,
                "learning_rate": 0.0003,
                "verbose": False,
            },
            "expected": np.array(
                [
                    [
                        5.49166091e-01,
                        2.46373373e-01,
                        5.89727712e-01,
                        7.37927874e-02,
                        9.52671617e-01,
                    ],
                    [
                        4.89061423e-01,
                        8.58166034e-01,
                        8.31315085e-02,
                        7.48037161e-02,
                        8.36581242e-04,
                    ],
                    [
                        7.56135061e-01,
                        -5.60399011e-03,
                        1.46376115e-01,
                        4.07797332e-01,
                        2.08062240e-01,
                    ],
                    [
                        1.58350913e-01,
                        8.46338260e-01,
                        3.21697639e-01,
                        7.91145852e-01,
                        4.46340717e-01,
                    ],
                    [
                        3.46947901e-01,
                        6.20500819e-01,
                        4.22710262e-01,
                        1.49351183e-01,
                        4.66880248e-01,
                    ],
                ]
            ),
        },
        {
            "name": "random_check_large_lr",
            "input": {
                "X": np.array(
                    [
                        [0.69646919, 0.28613933, 0.22685145, 0.55131477, 0.71946897],
                        [0.42310646, 0.9807642, 0.68482974, 0.4809319, 0.39211752],
                        [0.34317802, 0.72904971, 0.43857224, 0.0596779, 0.39804426],
                        [0.73799541, 0.18249173, 0.17545176, 0.53155137, 0.53182759],
                        [0.63440096, 0.84943179, 0.72445532, 0.61102351, 0.72244338],
                        [0.32295891, 0.36178866, 0.22826323, 0.29371405, 0.63097612],
                        [0.09210494, 0.43370117, 0.43086276, 0.4936851, 0.42583029],
                        [0.31226122, 0.42635131, 0.89338916, 0.94416002, 0.50183668],
                        [0.62395295, 0.1156184, 0.31728548, 0.41482621, 0.86630916],
                        [0.25045537, 0.48303426, 0.98555979, 0.51948512, 0.61289453],
                    ]
                ),
                "Y": np.array(
                    [
                        [0.01206287, 0.08263408, 0.06030601, 0.0545068, 0.03427638],
                        [0.03041208, 0.04170222, 0.06813008, 0.08754568, 0.05104223],
                        [0.06693138, 0.05859366, 0.06249035, 0.06746891, 0.08423424],
                        [0.0083195, 0.07636828, 0.02436664, 0.0194223, 0.0572457],
                        [0.00957125, 0.08853268, 0.0627249, 0.07234164, 0.00161292],
                        [0.05944319, 0.05567852, 0.01589596, 0.01530705, 0.06955295],
                        [0.03187664, 0.06919703, 0.05543832, 0.03889506, 0.09251325],
                        [0.084167, 0.03573976, 0.00435915, 0.03047681, 0.03981857],
                        [0.07049588, 0.09953585, 0.03559149, 0.07625478, 0.05931769],
                        [0.06917018, 0.01511275, 0.03988763, 0.02408559, 0.0343456],
                    ]
                ),
                "train_steps": 10,
                "learning_rate": 0.8,
                "verbose": False,
            },
            "expected": np.array(
                [
                    [1.49222726, 1.27201502, 0.99502832, 0.80565394, 1.40986691],
                    [1.42160903, 1.93442368, 0.97946232, 0.94203655, 1.21209401],
                    [1.8562409, 1.35159242, 1.07078329, 1.00669748, 1.46269503],
                    [1.31752657, 2.00481943, 0.96706243, 1.22178323, 1.28864589],
                    [1.64214155, 2.00758298, 1.07984998, 1.01051933, 1.33904183],
                ]
            ),
        },
        {
            "name": "smallest_check",
            "input": {
                "X": np.array([[0.10]]),
                "Y": np.array([[0.20]]),
                "train_steps": 10,
                "learning_rate": 0.01,
                "verbose": False,
            },
            "expected": np.array([[0.57338799]]),
        },
        {
            "name": "small_check",
            "input": {
                "X": np.array([[0.10, 0.1], [0.2, 0.4], [0.6, -0.2]]),
                "Y": np.array([[0.20, 0.4], [0.3, 0.5], [0.1, 0.0]]),
                "train_steps": 50,
                "learning_rate": 0.005,
                "verbose": False,
            },
            "expected": np.array([[0.55832269, 0.2735995], [0.60690436, 0.12258995]]),
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])

        try:
            assert result.shape == test_case["expected"].shape
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"].shape,
                    "got": result.shape,
                }
            )
            print(
                f"Wrong shape for rotation matrix after applying gradient descent. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(result, test_case["expected"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"],
                    "got": result,
                }
            )
            print(
                f"Wrong output values for rotation matrix after gradient descent. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_nearest_neighbor(target):
    successful_cases = 0
    failed_cases = []

    test_cases = [
        {
            "name": "default_check",
            "input": {
                "v": np.array([1, 0, 1]),
                "candidates": np.array(
                    [[1, 0, 5], [-2, 5, 3], [2, 0, 1], [6, -9, 5], [9, 9, 9]]
                ),
                "k": 3,
            },
            "expected": np.array([2, 0, 4]),
        },
        {
            "name": "larger_check",
            "input": {
                "v": np.array([1, 0, -1, 1, 0]),
                "candidates": np.array(
                    [
                        [2, 1, 0, 5, 0],
                        [-2, 5, 3, 1, -1],
                        [2, 0, 1, 0, 0],
                        [6, -9, 5, -3, 8],
                        [9, 9, 9, 9, 9],
                        [-8, -8, -8, -8, -8],
                        [2, 0, -5, 3, 0],
                    ]
                ),
                "k": 4,
            },
            "expected": np.array([6, 0, 4, 2]),
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])

        try:
            assert result.shape == (test_case["input"]["k"],)
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": (test_case["input"]["k"],),
                    "got": result.shape,
                }
            )
            print(
                f"Wrong output shape. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(result, test_case["expected"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"],
                    "got": result,
                }
            )
            print(
                f"Wrong ids were returned from nearest neighbor function. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def unittest_test_vocabulary(target):
    successful_cases = 0
    failed_cases = []

    test_cases = [
        {
            "name": "small_check",
            "input": {
                "X": np.array([[0.10], [0.10]]),
                "Y": np.array([[0.20], [0.20]]),
                "R": np.array([[0.30]]),
            },
            "expected": 0.5,
        },
        {
            "name": "another_check",
            "input": {
                "X": np.array([[0.10, 0.1], [0.2, 0.4], [0.6, -0.2], [0.6, -0.5]]),
                "Y": np.array([[0.20, 0.4], [0.3, 0.5], [0.1, 0.0], [-0.2, 0.8]]),
                "R": np.array([[0.30, -0.1], [-0.4, 0.2]]),
            },
            "expected": 0.25,
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])
        try:
            assert np.isclose(result, test_case["expected"])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"],
                    "got": result,
                }
            )
            print(
                f"Wrong accuracy. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_get_document_embedding(target):
    successful_cases = 0
    failed_cases = []

    en_embeddings_subset = pickle.load(open("./data/en_embeddings.p", "rb"))

    test_cases = [
        {
            "name": "default_check",
            "input": {
                "tweet": "RT @Twitter @chapagain Hello There! Have a great day. :) #good #morning http://chapagain.com.np",
                "en_embeddings": en_embeddings_subset,
            },
            "expected": np.array(
                [
                    -0.09228516,
                    0.35986328,
                    -0.0206604,
                    0.63085938,
                    -0.06640625,
                    -0.16308594,
                    0.12438965,
                    -0.38378906,
                    0.2052002,
                    0.72949219,
                    -0.04516602,
                    -0.45263672,
                    0.05249023,
                    -0.03320312,
                    -0.0401001,
                    0.56152344,
                    0.36938477,
                    0.56152344,
                    0.24804688,
                    -0.55957031,
                    0.22080755,
                    0.53262329,
                    0.27148438,
                    -0.12158203,
                    0.44824219,
                    0.20996094,
                    -0.17175293,
                    0.31494141,
                    0.3314209,
                    0.04107666,
                    -0.16943359,
                    0.07659912,
                    0.40039062,
                    -0.05615234,
                    0.15039062,
                    -0.09906006,
                    0.08178711,
                    -0.01538086,
                    0.13002014,
                    0.63793945,
                    0.3503418,
                    -0.49438477,
                    0.90625,
                    0.11688232,
                    -0.13952637,
                    0.18023682,
                    -0.15283203,
                    0.11865234,
                    -0.07727051,
                    -0.02270508,
                    -0.21875,
                    0.42651367,
                    -0.20556641,
                    0.2355957,
                    -0.19287109,
                    0.30334473,
                    -0.41244507,
                    0.14910889,
                    0.67871094,
                    -0.73535156,
                    -0.58837891,
                    0.703125,
                    -0.74028778,
                    -0.27380371,
                    0.44970703,
                    0.17834473,
                    -0.28601074,
                    -0.29956055,
                    -0.73168945,
                    0.40844727,
                    0.38208008,
                    0.36474609,
                    0.00427246,
                    0.13623047,
                    -0.81103516,
                    -0.18515015,
                    -0.41894531,
                    0.42248535,
                    0.25213623,
                    0.49804688,
                    -0.08599854,
                    0.12335205,
                    -0.23394775,
                    0.1048584,
                    -0.1706543,
                    -0.51245117,
                    -0.23095703,
                    0.09667969,
                    0.2477417,
                    0.29602051,
                    0.50830078,
                    0.24951172,
                    -0.34320068,
                    -0.33551025,
                    -0.63720703,
                    -0.11279297,
                    0.46191406,
                    0.85791016,
                    -0.16973877,
                    -0.73730469,
                    -0.703125,
                    -0.24707031,
                    -0.35791016,
                    0.14923096,
                    -0.20996094,
                    0.25439453,
                    0.23864746,
                    -0.11428833,
                    0.05645752,
                    -0.2333374,
                    -0.17333984,
                    0.57885742,
                    -0.21875,
                    -0.23943329,
                    1.4296875,
                    -0.20495605,
                    0.25366211,
                    -0.18945312,
                    -0.06054688,
                    -0.26147461,
                    -0.28100586,
                    -0.15649414,
                    0.09814453,
                    0.54785156,
                    -0.17988968,
                    -0.24023438,
                    0.11187744,
                    -0.23364258,
                    0.13428879,
                    0.33007812,
                    -0.92919922,
                    -0.75732422,
                    -0.50384521,
                    0.20458984,
                    -0.37536621,
                    -0.40380859,
                    0.24243164,
                    0.64941406,
                    0.04708862,
                    0.65966797,
                    0.11938477,
                    -0.04785156,
                    -0.13946533,
                    -0.22802734,
                    -0.36474609,
                    0.01464844,
                    -0.19311523,
                    -0.58007812,
                    0.63977051,
                    -0.72509766,
                    0.37304688,
                    0.734375,
                    -0.60498047,
                    0.68591309,
                    -0.13061523,
                    0.29785156,
                    0.11779785,
                    -0.45117188,
                    -0.43766022,
                    -0.28540039,
                    -0.50054932,
                    0.33642578,
                    0.39825439,
                    0.25634766,
                    1.03369141,
                    -0.78979492,
                    -0.05151367,
                    -0.26245117,
                    0.16601562,
                    -0.28442383,
                    -0.27929688,
                    0.24603271,
                    0.29553223,
                    -0.21624756,
                    0.05023193,
                    0.54736328,
                    0.28411865,
                    -0.21411133,
                    0.0597229,
                    0.22265625,
                    -0.42504883,
                    -0.45507812,
                    0.28125,
                    0.02294922,
                    0.07226562,
                    0.00268555,
                    -0.23425293,
                    -0.00439453,
                    -0.26071167,
                    -0.12372589,
                    -0.23950195,
                    0.671875,
                    0.09326172,
                    -0.13769531,
                    0.13476562,
                    -0.04150391,
                    -0.5534668,
                    -0.23828125,
                    -0.62646484,
                    -0.45605469,
                    0.11376953,
                    0.3215332,
                    -0.02539062,
                    0.03448486,
                    0.34484863,
                    -0.07315063,
                    -0.36914062,
                    0.44361115,
                    -0.18005371,
                    0.37695312,
                    0.06298828,
                    0.05444336,
                    -0.70166016,
                    -0.22729492,
                    -0.09939575,
                    0.18310547,
                    1.01123047,
                    0.04821777,
                    -0.39575195,
                    -0.03546143,
                    0.08300781,
                    0.52709961,
                    0.17678833,
                    -0.24902344,
                    0.003479,
                    -0.26098633,
                    -0.06512451,
                    -0.16442871,
                    -0.21313477,
                    -0.00695801,
                    -0.27441406,
                    0.1038208,
                    -0.04638672,
                    0.08459473,
                    0.69530678,
                    0.11713409,
                    -0.2421875,
                    -0.22412109,
                    0.3326416,
                    0.0534668,
                    0.45727539,
                    0.41967773,
                    -0.0390625,
                    -0.18572235,
                    0.05792236,
                    -0.00854492,
                    0.14855957,
                    0.04370117,
                    -0.28991699,
                    -0.65419006,
                    -0.10021973,
                    0.97314453,
                    0.54248047,
                    0.60559082,
                    0.12188721,
                    -0.20544434,
                    0.12646484,
                    0.24584961,
                    -0.70187378,
                    -0.35263824,
                    -0.24633789,
                    -0.22729492,
                    -0.32714844,
                    -0.17199707,
                    0.48364258,
                    0.03271484,
                    0.40686035,
                    0.19189453,
                    -0.0769043,
                    -0.15240479,
                    -0.13122559,
                    0.6570015,
                    0.26641846,
                    -0.05163574,
                    0.72167969,
                    -0.71728516,
                    -0.33056641,
                    -0.30480957,
                    -0.25488281,
                    -0.05615234,
                    -0.04772949,
                    -0.03308105,
                    -0.24266815,
                    0.56396484,
                    0.27526855,
                    -0.26855469,
                    -0.36621094,
                    0.20117188,
                    -0.28466797,
                    0.43225098,
                    0.08807373,
                    0.32080078,
                    -0.64819336,
                    -0.22753906,
                    -0.23071289,
                    -0.00268555,
                    -0.15378189,
                    -0.55761719,
                    -0.07216644,
                    -0.32263184,
                ]
            ),
        },
        {
            "name": "positive_check",
            "input": {
                "tweet": "Thank you :-))) OK \nHave fun!!\n@anvy2446 @4HUMANITEEs @SexyAF12 @kikbella @adasamper @RachelLFilsoof\nEnjoy day u all\nhttp://t.co/5Y5OAESAzv",
                "en_embeddings": en_embeddings_subset,
            },
            "expected": np.array(
                [
                    -3.19618225e-01,
                    -2.56347656e-01,
                    -4.10400391e-01,
                    7.62207031e-01,
                    8.58764648e-02,
                    -1.46972656e-01,
                    5.09033203e-01,
                    -1.29882812e-01,
                    -1.56738281e-01,
                    1.09130859e-01,
                    -1.38671875e-01,
                    -5.32714844e-01,
                    1.55761719e-01,
                    1.22070312e-01,
                    3.80187988e-01,
                    9.55078125e-01,
                    5.36132812e-01,
                    5.89843750e-01,
                    5.70800781e-01,
                    -3.55651855e-01,
                    5.63964844e-01,
                    5.81451416e-01,
                    4.65820312e-01,
                    1.80664062e-01,
                    5.03906250e-01,
                    2.25362778e-02,
                    3.59375000e-01,
                    -2.08007812e-01,
                    1.55029297e-01,
                    -4.25292969e-01,
                    -5.06347656e-01,
                    -1.11572266e-01,
                    1.96289062e-01,
                    5.94726562e-01,
                    2.03125000e-01,
                    -2.40478516e-01,
                    4.92431641e-01,
                    -6.31591797e-01,
                    1.69433594e-01,
                    1.04956055e00,
                    4.15771484e-01,
                    -3.39477539e-01,
                    5.46142578e-01,
                    3.11462402e-01,
                    -1.84326172e-01,
                    -6.32568359e-01,
                    -4.78027344e-01,
                    1.31835938e-01,
                    7.81250000e-03,
                    2.22778320e-01,
                    -1.92871094e-01,
                    -7.32421875e-03,
                    5.28808594e-01,
                    5.91796875e-01,
                    4.49218750e-02,
                    2.01049805e-01,
                    3.06701660e-02,
                    -8.47778320e-02,
                    1.88903809e-01,
                    -9.02343750e-01,
                    -6.39648438e-01,
                    3.08044434e-01,
                    -6.53373718e-01,
                    9.48486328e-02,
                    4.79980469e-01,
                    1.61193848e-01,
                    -8.10058594e-01,
                    -1.98592663e-01,
                    -8.91113281e-02,
                    4.65332031e-01,
                    7.04101562e-01,
                    5.39550781e-02,
                    5.37475586e-01,
                    3.95507812e-02,
                    2.44140625e-01,
                    -9.45388794e-01,
                    -8.20007324e-02,
                    -3.62792969e-01,
                    3.10974121e-01,
                    7.82714844e-01,
                    -6.74316406e-01,
                    -2.03674316e-01,
                    -3.90014648e-02,
                    -7.31811523e-02,
                    -4.85351562e-01,
                    -2.19726562e-01,
                    -8.78417969e-01,
                    5.87158203e-02,
                    7.87597656e-01,
                    4.95605469e-01,
                    3.73291016e-01,
                    2.22167969e-02,
                    7.69042969e-02,
                    -2.14802742e-01,
                    -5.93750000e-01,
                    -1.61453247e-01,
                    3.12500000e-01,
                    9.57519531e-01,
                    8.54492188e-04,
                    -5.16601562e-01,
                    -5.51757812e-01,
                    8.64257812e-02,
                    -1.55029297e-01,
                    6.34582520e-01,
                    9.14306641e-02,
                    -1.86523438e-01,
                    6.90185547e-01,
                    -1.00097656e-01,
                    2.13645935e-01,
                    -1.24450684e-01,
                    -8.86230469e-02,
                    2.88330078e-01,
                    3.44116211e-01,
                    2.45124817e-01,
                    8.34472656e-01,
                    -6.47827148e-01,
                    5.48339844e-01,
                    -1.92871094e-01,
                    -1.31469727e-01,
                    -1.93199158e-01,
                    -7.42187500e-02,
                    -1.92871094e-01,
                    -1.41479492e-01,
                    7.45605469e-01,
                    -6.33125305e-02,
                    -1.34704590e-01,
                    -1.96289062e-01,
                    -3.06884766e-01,
                    -1.81751251e-01,
                    1.35986328e-01,
                    -5.41503906e-01,
                    -6.50390625e-01,
                    -5.35583496e-01,
                    2.29583740e-01,
                    -1.76574707e-01,
                    -1.39160156e-01,
                    3.12866211e-01,
                    4.57275391e-01,
                    -2.49565125e-01,
                    3.93554688e-01,
                    6.88964844e-01,
                    -1.66503906e-01,
                    -7.37304688e-02,
                    -9.90478516e-01,
                    -3.82568359e-01,
                    3.80737305e-01,
                    2.35000610e-01,
                    -4.75585938e-01,
                    2.59124756e-01,
                    -1.13720703e00,
                    5.06347656e-01,
                    8.47656250e-01,
                    -4.13574219e-01,
                    2.81127930e-01,
                    -1.07421875e-01,
                    4.97436523e-02,
                    8.54248047e-01,
                    -4.64843750e-01,
                    -1.19824219e00,
                    -4.60449219e-01,
                    -2.15454102e-01,
                    2.73925781e-01,
                    2.26074219e-01,
                    1.15527344e00,
                    8.44238281e-01,
                    -5.80810547e-01,
                    4.84619141e-02,
                    -6.98242188e-02,
                    9.69238281e-02,
                    7.87353516e-02,
                    -3.89648438e-01,
                    2.38586426e-01,
                    4.02832031e-03,
                    -6.83593750e-02,
                    -2.71240234e-01,
                    2.53906250e-02,
                    1.31225586e-02,
                    6.11572266e-02,
                    -4.33837891e-01,
                    2.17163086e-01,
                    -9.16503906e-01,
                    -1.90795898e-01,
                    3.19580078e-01,
                    2.89245605e-01,
                    -5.58593750e-01,
                    -5.83374023e-01,
                    1.25610352e-01,
                    -5.50750732e-01,
                    7.17773438e-02,
                    -2.51159668e-01,
                    -8.25195312e-02,
                    2.20703125e-01,
                    -1.17797852e-02,
                    1.82617188e-01,
                    -7.93457031e-02,
                    -8.78906250e-02,
                    3.17016602e-01,
                    1.54296875e-01,
                    -7.32421875e-01,
                    -5.42968750e-01,
                    1.36047363e-01,
                    4.00390625e-01,
                    -8.17382812e-01,
                    -4.86816406e-01,
                    4.38232422e-02,
                    -2.64801025e-01,
                    -6.08886719e-01,
                    2.56835938e-01,
                    -5.06103516e-01,
                    1.20117188e-01,
                    5.42480469e-01,
                    8.44482422e-01,
                    -6.66717529e-01,
                    -4.58984375e-02,
                    4.22851562e-01,
                    -3.01269531e-01,
                    5.07141113e-01,
                    5.79833984e-03,
                    -6.25610352e-01,
                    -2.51831055e-01,
                    2.74658203e-01,
                    6.93359375e-02,
                    -2.73071289e-01,
                    -3.65478516e-01,
                    -2.45208740e-01,
                    -2.23632812e-01,
                    -1.56372070e-01,
                    -2.35900879e-01,
                    -1.84936523e-01,
                    -2.21191406e-01,
                    -1.50451660e-01,
                    -2.57568359e-02,
                    7.78808594e-02,
                    1.44348145e-01,
                    5.12884140e-01,
                    1.31713867e-01,
                    -1.00585938e-01,
                    4.06127930e-01,
                    4.83642578e-01,
                    -1.90429688e-01,
                    -2.75878906e-02,
                    1.09558105e-01,
                    -6.42089844e-01,
                    -1.41601562e-01,
                    -4.63073730e-01,
                    5.62988281e-01,
                    3.44116211e-01,
                    2.26745605e-01,
                    -1.75048828e-01,
                    -7.29141235e-01,
                    -2.51586914e-01,
                    7.17285156e-01,
                    3.31054688e-01,
                    2.39807129e-01,
                    -1.05529785e-01,
                    6.72760010e-02,
                    -2.92968750e-02,
                    1.58569336e-01,
                    -9.32342529e-01,
                    -2.67883301e-01,
                    -1.27685547e-01,
                    -2.62207031e-01,
                    1.63330078e-01,
                    1.20361328e-01,
                    3.90625000e-02,
                    3.84033203e-01,
                    2.22167969e-01,
                    3.51074219e-01,
                    -6.01562500e-01,
                    -1.21582031e-01,
                    3.51562500e-02,
                    7.25849152e-01,
                    7.41699219e-01,
                    2.04589844e-01,
                    9.98046875e-01,
                    -8.47167969e-01,
                    -3.86962891e-01,
                    -2.64770508e-01,
                    -3.76464844e-01,
                    -5.29785156e-01,
                    3.54125977e-01,
                    3.64089966e-01,
                    -4.95117188e-01,
                    5.83007812e-01,
                    2.46582031e-01,
                    -2.38494873e-02,
                    -4.83398438e-01,
                    4.55810547e-01,
                    8.69750977e-02,
                    3.57177734e-01,
                    2.35473633e-01,
                    6.96289062e-01,
                    -6.54785156e-01,
                    -4.56420898e-01,
                    -6.60888672e-01,
                    -6.07910156e-01,
                    -1.32629395e-01,
                    -1.01562500e-01,
                    1.90917969e-01,
                    -2.43530273e-01,
                ]
            ),
        },
        {
            "name": "negative_check",
            "input": {
                "tweet": "@f0ggstar @stuartthull work neighbour on motors. Asked why and he said hates the updates on search :( http://t.co/XvmTUikWln",
                "en_embeddings": en_embeddings_subset,
            },
            "expected": np.array(
                [
                    0.22283936,
                    0.28491211,
                    0.25024414,
                    0.04541016,
                    -0.68408203,
                    0.09716797,
                    0.62237549,
                    -1.06835938,
                    0.04943848,
                    0.42053223,
                    0.16503906,
                    0.08770752,
                    -0.56958008,
                    0.38500977,
                    -0.3737793,
                    0.69458008,
                    0.47241211,
                    0.83874512,
                    -0.35630798,
                    -0.4699707,
                    0.15966797,
                    -0.1340332,
                    0.05847168,
                    0.07592773,
                    0.08911133,
                    -0.01342773,
                    -0.49853516,
                    0.2824707,
                    0.59033203,
                    0.33862305,
                    -0.56066895,
                    0.29345703,
                    -0.24862671,
                    0.06762695,
                    0.33227539,
                    -0.05981445,
                    0.41503906,
                    0.00463867,
                    0.06152344,
                    0.34017944,
                    0.28186035,
                    -0.45645142,
                    0.53930664,
                    0.06201172,
                    -1.28027344,
                    -0.61914062,
                    -0.20092773,
                    -0.19140625,
                    -0.42651367,
                    0.51290894,
                    0.25634766,
                    -0.19384766,
                    0.14532471,
                    0.0065918,
                    0.41040039,
                    0.23486328,
                    -0.4463501,
                    -0.18139648,
                    0.30151367,
                    0.3046875,
                    -0.21289062,
                    0.6137085,
                    -0.95776367,
                    0.35247803,
                    -0.28149414,
                    0.01831055,
                    -0.71166992,
                    0.07360744,
                    -0.64978027,
                    0.25170898,
                    0.12133789,
                    -0.08270264,
                    0.25054932,
                    0.01202393,
                    -0.91259766,
                    -0.32086182,
                    0.52514648,
                    0.28588867,
                    0.55639648,
                    0.62402344,
                    0.07714844,
                    0.05639648,
                    0.57897949,
                    0.29162598,
                    -0.07775879,
                    -0.34179688,
                    -0.78417969,
                    0.65600586,
                    0.00170898,
                    0.19213867,
                    0.42407227,
                    -0.0222168,
                    -0.20275879,
                    -0.18103027,
                    0.33093262,
                    -0.34790039,
                    0.53149414,
                    0.12756348,
                    0.15175247,
                    0.00427246,
                    -0.35406494,
                    -0.68261719,
                    0.51721191,
                    0.62768555,
                    0.61785889,
                    -0.21142578,
                    -0.27377319,
                    -0.18349171,
                    0.46520996,
                    -0.02539062,
                    -0.6184082,
                    -0.68066406,
                    -0.23891449,
                    0.01464844,
                    0.80282593,
                    -0.49487305,
                    0.20501709,
                    -0.53417969,
                    0.19946289,
                    0.20629883,
                    -0.43786621,
                    0.71575928,
                    -0.67370605,
                    1.14257812,
                    -0.26928711,
                    -0.56404114,
                    -0.32324219,
                    -0.37646484,
                    -0.20385742,
                    0.07284927,
                    -0.03900146,
                    -1.05761719,
                    -0.55053711,
                    0.33276367,
                    0.04736328,
                    -0.45610809,
                    0.14294434,
                    0.20776367,
                    0.05499268,
                    -0.00244141,
                    0.64379883,
                    -0.41625977,
                    -0.72000122,
                    -0.51855469,
                    0.50085449,
                    -0.20605469,
                    0.10180664,
                    -0.79449463,
                    -0.42248535,
                    -0.49145508,
                    0.81213379,
                    0.43730164,
                    -0.22216797,
                    0.83654785,
                    -0.4050827,
                    0.42758179,
                    -0.26586914,
                    -0.001297,
                    -0.71533203,
                    -0.5770874,
                    0.23144531,
                    0.46895599,
                    -0.12792969,
                    0.07299805,
                    0.89770508,
                    -0.79815674,
                    0.67112732,
                    -0.87768555,
                    0.17919922,
                    -0.19836426,
                    -0.06900024,
                    0.24572754,
                    -0.55883789,
                    -0.14941406,
                    -0.35559082,
                    -0.01342773,
                    0.99023438,
                    -0.35809326,
                    -0.82128906,
                    -0.00878906,
                    -0.43847656,
                    -0.31011963,
                    -0.2305603,
                    0.20288086,
                    0.17327881,
                    -0.49133301,
                    -0.18041992,
                    0.09155273,
                    0.92944336,
                    0.50561523,
                    0.33804321,
                    0.1027832,
                    0.30944824,
                    0.60516357,
                    -0.20629883,
                    -0.16918945,
                    0.69299316,
                    -0.26654053,
                    -0.70800781,
                    -0.39361572,
                    -0.14874268,
                    0.27001953,
                    -0.24169922,
                    -0.44030762,
                    -0.12496948,
                    0.13342285,
                    -0.56970215,
                    0.15454102,
                    0.85351562,
                    -0.17230225,
                    0.28442383,
                    -0.42443848,
                    -0.43701172,
                    -0.37896729,
                    -0.46728516,
                    0.35211182,
                    0.54650879,
                    0.375,
                    -0.99237061,
                    -0.62329102,
                    0.01724243,
                    -1.16308594,
                    -0.19934082,
                    0.12487984,
                    0.53419495,
                    -0.11071777,
                    0.42669678,
                    0.7522583,
                    -0.25030518,
                    -0.22956848,
                    0.62191772,
                    -0.30705643,
                    -0.38146973,
                    0.04907227,
                    0.22827148,
                    -0.14648438,
                    0.19958496,
                    -0.44458771,
                    0.69018555,
                    -0.2868042,
                    0.20892334,
                    0.11968994,
                    -0.56091309,
                    0.0378418,
                    -0.45214844,
                    0.50169373,
                    0.2554245,
                    0.01416016,
                    0.22369385,
                    -0.61975098,
                    0.17736816,
                    0.09436035,
                    0.31091309,
                    0.28271484,
                    0.26989746,
                    -0.21386719,
                    0.04321289,
                    -0.13943481,
                    0.09863281,
                    -0.20556641,
                    0.11816406,
                    0.04602051,
                    -0.53210449,
                    0.62817383,
                    -0.11279297,
                    0.798172,
                    0.52416992,
                    -0.34240723,
                    -0.72070312,
                    0.5859375,
                    0.59851074,
                    0.39646912,
                    0.66333008,
                    0.35333252,
                    0.01660156,
                    -0.74816895,
                    -0.75280762,
                    -0.33331299,
                    -0.15893555,
                    -0.21777344,
                    -0.37854004,
                    0.02565765,
                    0.07775879,
                    0.23046875,
                    0.27246094,
                    0.13684082,
                    -0.35748291,
                    0.39190674,
                    0.4677124,
                    0.58044434,
                    -0.29101562,
                    0.50402832,
                    -0.23986816,
                    0.03662109,
                    -0.46264648,
                    -0.40649414,
                    0.39990234,
                    0.33050537,
                    0.04193115,
                    -0.31494141,
                ]
            ),
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])

        try:
            assert result.shape == test_case["expected"].shape
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"].shape,
                    "got": result.shape,
                }
            )
            print(
                f"Wrong output shape. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(
                result, test_case["expected"], atol=1e-05
            )  # np.allclose(result[:10], test_case["expected"][:10])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"][:10],
                    "got": result[:10],
                }
            )
            print(
                f"Wrong document embedding. Remember to use 0 if the word is not in the embeddings. \n\tExpected first 10 elements: {failed_cases[-1].get('expected')}.\n\tGot those first 10 elements: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(
                result, test_case["expected"], atol=1e-05
            )  # np.allclose(result[-10:], test_case["expected"][-10:])
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"][-10:],
                    "got": result[-10:],
                }
            )
            print(
                f"Wrong document embedding. Remember to use 0 if the word is not in the embeddings. \n\tExpected first 10 elements: {failed_cases[-1].get('expected')}.\n\tGot those first 10 elements: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_get_document_vecs(target):
    successful_cases = 0
    failed_cases = []

    en_embeddings_subset = pickle.load(open("./data/en_embeddings.p", "rb"))
    all_positive_tweets = twitter_samples.strings("positive_tweets.json")
    all_negative_tweets = twitter_samples.strings("negative_tweets.json")
    all_tweets = all_positive_tweets + all_negative_tweets

    del all_positive_tweets, all_negative_tweets

    test_cases = [
        {
            "name": "default_check",
            "input": {"all_docs": all_tweets, "en_embeddings": en_embeddings_subset},
            "expected": {
                "len_dict": 10000,
                "docs_shape": (10000, 300),
                "doc_vec_0_0until10": np.array(
                    [
                        0.04821777,
                        -0.01904297,
                        0.15820312,
                        -0.18847656,
                        -0.11352539,
                        -0.1640625,
                        -0.1550293,
                        -0.63964844,
                        0.52001953,
                        0.04882812,
                    ]
                ),
                "doc_vec_last_0until10": np.array(
                    [
                        -0.30578613,
                        0.3984375,
                        -0.17480469,
                        -0.33544922,
                        -0.19067383,
                        -0.02441406,
                        0.00244141,
                        -0.44140625,
                        0.88818359,
                        0.37170401,
                    ]
                ),
                "ind2tweet_0_0until10": np.array(
                    [
                        0.04821777,
                        -0.01904297,
                        0.15820312,
                        -0.18847656,
                        -0.11352539,
                        -0.1640625,
                        -0.1550293,
                        -0.63964844,
                        0.52001953,
                        0.04882812,
                    ]
                ),
            },
        },
        {
            "name": "small_check",
            "input": {
                "all_docs": [
                    "@f0ggstar @stuartthull work neighbour on motors. Asked why and he said hates the updates on search :( http://t.co/XvmTUikWln",
                    "Thank you :-))) OK \nHave fun!!\n@anvy2446 @4HUMANITEEs @SexyAF12 @kikbella @adasamper @RachelLFilsoof\nEnjoy day u all\nhttp://t.co/5Y5OAESAzv",
                    "RT @Twitter @chapagain Hello There! Have a great day. :) #good #morning http://chapagain.com.np",
                ],
                "en_embeddings": en_embeddings_subset,
            },
            "expected": {
                "len_dict": 3,
                "docs_shape": (3, 300),
                "doc_vec_0_0until10": np.array(
                    [
                        0.22283936,
                        0.28491211,
                        0.25024414,
                        0.04541016,
                        -0.68408203,
                        0.09716797,
                        0.62237549,
                        -1.06835938,
                        0.04943848,
                        0.42053223,
                    ]
                ),
                "doc_vec_last_0until10": np.array(
                    [
                        -0.09228516,
                        0.35986328,
                        -0.0206604,
                        0.63085938,
                        -0.06640625,
                        -0.16308594,
                        0.12438965,
                        -0.38378906,
                        0.2052002,
                        0.72949219,
                    ]
                ),
                "ind2tweet_0_0until10": np.array(
                    [
                        0.22283936,
                        0.28491211,
                        0.25024414,
                        0.04541016,
                        -0.68408203,
                        0.09716797,
                        0.62237549,
                        -1.06835938,
                        0.04943848,
                        0.42053223,
                    ]
                ),
            },
        },
    ]

    for test_case in test_cases:
        result_doc, result_dict = target(**test_case["input"])

        try:
            assert result_doc.shape == test_case["expected"]["docs_shape"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["docs_shape"],
                    "got": result_doc.shape,
                }
            )
            print(
                f"Wrong output shape for document_vec_matrix. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert len(result_dict) == test_case["expected"]["len_dict"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["len_dict"],
                    "got": len(result_dict),
                }
            )
            print(
                f"Wrong number of elements in the ind2Doc_dict dictionary. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(
                result_doc[0][:10],
                test_case["expected"]["doc_vec_0_0until10"],
                atol=1e-05,
            )
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["doc_vec_0_0until10"],
                    "got": result_doc[0][:10],
                }
            )
            print(
                f"Wrong document embedding. \n\tExpected first 10 elements: {failed_cases[-1].get('expected')}.\n\tGot those first 10 elements: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(
                result_doc[-1][:10],
                test_case["expected"]["doc_vec_last_0until10"],
                atol=1e-05,
            )
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["doc_vec_last_0until10"],
                    "got": result_doc[-1][:10],
                }
            )
            print(
                f"Wrong document embedding. \n\tExpected first 10 elements: {failed_cases[-1].get('expected')}.\n\tGot those first 10 elements: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(
                result_doc[-1][:10],
                test_case["expected"]["doc_vec_last_0until10"],
                atol=1e-05,
            )
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["doc_vec_last_0until10"],
                    "got": result_doc[-1][:10],
                }
            )
            print(
                f"Wrong document embedding. \n\tExpected first 10 elements: {failed_cases[-1].get('expected')}.\n\tGot those first 10 elements: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(
                result_dict[0][:10],
                test_case["expected"]["ind2tweet_0_0until10"],
                atol=1e-05,
            )
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["ind2tweet_0_0until10"],
                    "got": result_dict[0][:10],
                }
            )
            print(
                f"Wrong embedding in dictionary at index 0. \n\tExpected first 10 elements: {failed_cases[-1].get('expected')}.\n\tGot those first 10 elements: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_hash_value_of_vector(target):
    successful_cases = 0
    failed_cases = []

    #  default_check
    N_DIMS = 300
    N_PLANES = 10
    N_UNIVERSES = 25

    np.random.seed(0)
    planes_l_default = [
        np.random.normal(size=(N_DIMS, N_PLANES)) for _ in range(N_UNIVERSES)
    ]
    idx = 0
    planes_default = planes_l_default[idx]

    np.random.seed(0)
    vec = np.random.rand(1, 300)

    # small_check
    N_DIMS = 20
    N_PLANES = 8
    N_UNIVERSES = 5

    np.random.seed(0)
    planes_l_small = [
        np.random.normal(size=(N_DIMS, N_PLANES)) for _ in range(N_UNIVERSES)
    ]
    idx = 4
    planes_small = planes_l_small[idx]

    np.random.seed(0)
    vec_small = np.random.rand(1, 20)

    # small_check2
    N_DIMS = 20
    N_PLANES = 8
    N_UNIVERSES = 5

    np.random.seed(0)
    planes_l_small = [
        np.random.normal(size=(N_DIMS, N_PLANES)) for _ in range(N_UNIVERSES)
    ]
    idx = 0
    planes_small2 = planes_l_small[idx]

    np.random.seed(0)
    vec_small2 = np.random.rand(1, 20)

    test_cases = [
        {
            "name": "default_check",
            "input": {"v": vec, "planes": planes_default},
            "expected": 768,
        },
        {
            "name": "small_check",
            "input": {"v": vec_small, "planes": planes_small},
            "expected": 70,
        },
        {
            "name": "small_check2",
            "input": {"v": vec_small2, "planes": planes_small2},
            "expected": 251,
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])

        try:
            assert result == test_case["expected"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"],
                    "got": result,
                }
            )
            print(
                f"Wrong hash value. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_make_hash_table(target):
    successful_cases = 0
    failed_cases = []

    doc_vecs_test = np.array(
        [
            [
                8.49609375e-02,
                1.18530273e-01,
                1.56250000e-01,
                5.19042969e-01,
                -2.34863281e-01,
                -2.25036621e-01,
                2.77343750e-01,
                -4.40429688e-01,
                3.58886719e-01,
                8.93554688e-02,
                1.18164062e-01,
                -2.70507812e-01,
                4.39453125e-02,
                -1.12060547e-01,
                1.09375000e-01,
                1.02539062e-01,
                1.46484375e-01,
                4.91210938e-01,
                1.61132812e-02,
                -1.13403320e-01,
            ],
            [
                -2.19726562e-02,
                1.69921875e-01,
                -1.97265625e-01,
                -2.44140625e-01,
                3.66210938e-02,
                -1.75781250e-01,
                2.67333984e-02,
                -9.08203125e-02,
                8.00781250e-02,
                1.35498047e-02,
                -5.81054688e-02,
                -8.85009766e-04,
                -8.15429688e-02,
                1.19140625e-01,
                5.34057617e-03,
                -3.36914062e-02,
                1.09863281e-01,
                1.00097656e-01,
                1.03515625e-01,
                2.73437500e-02,
            ],
            [
                9.61914062e-02,
                1.47460938e-01,
                9.13085938e-02,
                7.81250000e-02,
                -9.96093750e-02,
                -6.73828125e-02,
                2.13623047e-02,
                -3.47656250e-01,
                -1.10839844e-01,
                2.44140625e-01,
                5.24902344e-02,
                -4.95605469e-02,
                -1.83105469e-02,
                -2.07031250e-01,
                -1.04492188e-01,
                2.91015625e-01,
                -6.73828125e-02,
                2.81250000e-01,
                -1.17187500e-02,
                6.29882812e-02,
            ],
            [
                -1.02294922e-01,
                7.03125000e-02,
                3.00903320e-02,
                2.48535156e-01,
                -2.13256836e-01,
                -5.71289062e-02,
                2.95410156e-01,
                -7.72705078e-02,
                3.23730469e-01,
                -7.89794922e-02,
                -8.05664062e-03,
                -2.53906250e-01,
                -7.42492676e-02,
                -3.61328125e-02,
                -3.65234375e-01,
                2.61703491e-01,
                4.81567383e-02,
                3.34960938e-01,
                6.59179688e-02,
                -2.95898438e-01,
            ],
            [
                7.40509033e-02,
                -6.64062500e-02,
                -1.23046875e-01,
                1.41601562e-01,
                -5.65429688e-01,
                3.10791016e-01,
                1.57836914e-01,
                -2.10510254e-01,
                1.79290771e-02,
                2.98461914e-02,
                1.86767578e-01,
                -1.33544922e-01,
                -7.20214844e-03,
                5.36132812e-01,
                -2.29003906e-01,
                -3.25683594e-01,
                5.07812500e-01,
                2.48046875e-01,
                9.00878906e-02,
                1.28906250e-01,
            ],
            [
                -1.97265625e-01,
                2.12890625e-01,
                -2.74658203e-02,
                1.01318359e-02,
                -8.00781250e-02,
                -3.32031250e-02,
                -2.91748047e-02,
                -8.30078125e-02,
                8.83789062e-02,
                -1.26953125e-01,
                -1.30859375e-01,
                -1.18652344e-01,
                -5.35156250e-01,
                2.49023438e-01,
                -2.55859375e-01,
                2.83203125e-01,
                -1.85546875e-01,
                5.41992188e-02,
                4.80957031e-02,
                -2.00195312e-01,
            ],
            [
                1.26220703e-01,
                3.80859375e-01,
                3.90625000e-03,
                -3.39355469e-01,
                2.04833984e-01,
                -2.85156250e-01,
                2.52197266e-01,
                -1.17187500e-02,
                2.56225586e-01,
                2.64160156e-01,
                1.51367188e-01,
                -1.10961914e-01,
                1.32568359e-01,
                -7.81250000e-03,
                7.61718750e-02,
                -1.14050865e-01,
                -5.32226562e-02,
                1.62597656e-01,
                -5.41076660e-02,
                1.66503906e-01,
            ],
            [
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
                0.00000000e00,
            ],
            [
                -2.71972656e-01,
                2.07519531e-01,
                1.69921875e-01,
                2.27050781e-01,
                -2.31933594e-02,
                5.48828125e-01,
                1.74804688e-01,
                -1.36474609e-01,
                -3.20800781e-01,
                7.86132812e-02,
                -1.41113281e-01,
                -1.83837891e-01,
                -1.47460938e-01,
                9.46655273e-02,
                -2.59277344e-01,
                3.17321777e-01,
                2.56835938e-01,
                -1.65893555e-01,
                -3.39355469e-02,
                -1.49414062e-01,
            ],
            [
                -3.05786133e-01,
                3.98437500e-01,
                -1.74804688e-01,
                -3.35449219e-01,
                -1.90673828e-01,
                -2.44140625e-02,
                2.44140625e-03,
                -4.41406250e-01,
                8.88183594e-01,
                3.71704102e-01,
                1.75170898e-02,
                -2.78320312e-02,
                -8.49609375e-02,
                -2.34863281e-01,
                1.75537109e-01,
                3.54003906e-01,
                -2.89550781e-01,
                9.98992920e-02,
                -2.86621094e-01,
                -1.82128906e-01,
            ],
        ]
    )

    np.random.seed(0)
    planes_l = [np.random.normal(size=(20, 8)) for _ in range(5)]

    test_cases = [
        {
            "name": "small_check1",
            "input": {"vecs": doc_vecs_test, "planes": planes_l[0]},
            "expected": {
                "len_tables": 256,
                "id_to_eval": 225,
                "id_table": [3, 5],
                "hash_table": [
                    np.array(
                        [
                            -0.10229492,
                            0.0703125,
                            0.03009033,
                            0.24853516,
                            -0.21325684,
                            -0.05712891,
                            0.29541016,
                            -0.07727051,
                            0.32373047,
                            -0.07897949,
                            -0.00805664,
                            -0.25390625,
                            -0.07424927,
                            -0.03613281,
                            -0.36523438,
                            0.26170349,
                            0.04815674,
                            0.33496094,
                            0.06591797,
                            -0.29589844,
                        ]
                    ),
                    np.array(
                        [
                            -0.19726562,
                            0.21289062,
                            -0.02746582,
                            0.01013184,
                            -0.08007812,
                            -0.03320312,
                            -0.0291748,
                            -0.08300781,
                            0.08837891,
                            -0.12695312,
                            -0.13085938,
                            -0.11865234,
                            -0.53515625,
                            0.24902344,
                            -0.25585938,
                            0.28320312,
                            -0.18554688,
                            0.05419922,
                            0.0480957,
                            -0.20019531,
                        ]
                    ),
                ],
            },
        },
        {
            "name": "small_check2",
            "input": {"vecs": doc_vecs_test, "planes": planes_l[4]},
            "expected": {
                "len_tables": 256,
                "id_to_eval": 182,
                "id_table": [6, 9],
                "hash_table": [
                    np.array(
                        [
                            0.1262207,
                            0.38085938,
                            0.00390625,
                            -0.33935547,
                            0.20483398,
                            -0.28515625,
                            0.25219727,
                            -0.01171875,
                            0.25622559,
                            0.26416016,
                            0.15136719,
                            -0.11096191,
                            0.13256836,
                            -0.0078125,
                            0.07617188,
                            -0.11405087,
                            -0.05322266,
                            0.16259766,
                            -0.05410767,
                            0.16650391,
                        ]
                    ),
                    np.array(
                        [
                            -0.30578613,
                            0.3984375,
                            -0.17480469,
                            -0.33544922,
                            -0.19067383,
                            -0.02441406,
                            0.00244141,
                            -0.44140625,
                            0.88818359,
                            0.3717041,
                            0.01751709,
                            -0.02783203,
                            -0.08496094,
                            -0.23486328,
                            0.17553711,
                            0.35400391,
                            -0.28955078,
                            0.09989929,
                            -0.28662109,
                            -0.18212891,
                        ]
                    ),
                ],
            },
        },
    ]

    for test_case in test_cases:
        result_hash, result_id = target(**test_case["input"])

        try:
            assert len(result_hash) == test_case["expected"]["len_tables"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["len_tables"],
                    "got": len(result_hash),
                }
            )
            print(
                f"Wrong number of elements in hash table. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert len(result_id) == test_case["expected"]["len_tables"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["len_tables"],
                    "got": len(result_hash),
                }
            )
            print(
                f"Wrong number of elements in id table. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert (
                result_id[test_case["expected"]["id_to_eval"]]
                == test_case["expected"]["id_table"]
            )
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["id_table"],
                    "got": result_id[test_case["expected"]["id_to_eval"]],
                }
            )
            print(
                f"Wrong ids value at index {test_case['expected']['id_to_eval']} in id table. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

        try:
            assert np.allclose(
                result_hash[test_case["expected"]["id_to_eval"]],
                test_case["expected"]["hash_table"],
                atol=1e-05,
            )
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"]["hash_table"],
                    "got": result_hash[test_case["expected"]["id_to_eval"]],
                }
            )
            print(
                f"Wrong ids value at index {test_case['expected']['id_to_eval']} in id table. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases


def test_approximate_knn(target, hash_tables, id_tables):
    successful_cases = 0
    failed_cases = []

    N_DIMS = 300
    N_PLANES = 10
    N_UNIVERSES = 25

    np.random.seed(0)
    planes_l = [np.random.normal(size=(N_DIMS, N_PLANES)) for _ in range(N_UNIVERSES)]

    test_cases = [
        {
            "name": "default_check",
            "input": {
                "doc_id": 0,
                "v": np.array(
                    [
                        4.82177734e-02,
                        -1.90429688e-02,
                        1.58203125e-01,
                        -1.88476562e-01,
                        -1.13525391e-01,
                        -1.64062500e-01,
                        -1.55029297e-01,
                        -6.39648438e-01,
                        5.20019531e-01,
                        4.88281250e-02,
                        3.13415527e-01,
                        -4.41894531e-02,
                        2.24151611e-01,
                        -2.44140625e-03,
                        -1.53137207e-01,
                        2.27539062e-01,
                        4.15649414e-02,
                        -2.52273560e-01,
                        -5.08300781e-01,
                        3.85742188e-02,
                        1.88598633e-01,
                        3.41796875e-01,
                        -6.57226562e-01,
                        -1.98303223e-01,
                        -1.52343750e-01,
                        -2.04101562e-01,
                        -4.39453125e-02,
                        2.14843750e-01,
                        -6.95800781e-02,
                        3.18298340e-02,
                        1.23291016e-01,
                        1.03759766e-02,
                        2.77099609e-01,
                        8.15429688e-02,
                        3.12255859e-01,
                        -1.25976562e-01,
                        -1.20361328e-01,
                        1.80664062e-02,
                        -4.78515625e-01,
                        1.52709961e-01,
                        1.12792969e-01,
                        -5.85853577e-01,
                        3.35693359e-02,
                        1.97753906e-02,
                        -3.06640625e-01,
                        4.82940674e-02,
                        -2.44140625e-04,
                        -1.87988281e-01,
                        2.60742188e-01,
                        1.31225586e-01,
                        -7.08007812e-02,
                        -9.04541016e-02,
                        5.14221191e-03,
                        -1.95007324e-02,
                        -1.68212891e-01,
                        -2.22930908e-02,
                        -1.44042969e-02,
                        -1.36230469e-01,
                        3.90625000e-01,
                        -2.52441406e-01,
                        -1.84051514e-01,
                        4.54101562e-01,
                        -3.26660156e-01,
                        5.00488281e-02,
                        -4.22973633e-02,
                        2.34130859e-01,
                        1.15539551e-01,
                        1.80236816e-01,
                        3.32031250e-01,
                        4.17480469e-01,
                        3.89099121e-02,
                        -3.64257812e-01,
                        1.72119141e-01,
                        2.31933594e-01,
                        -3.14453125e-01,
                        -9.74121094e-02,
                        -1.14013672e-01,
                        2.25097656e-01,
                        4.24560547e-01,
                        -2.24365234e-01,
                        2.97119141e-01,
                        -4.72167969e-01,
                        1.46972656e-01,
                        3.17504883e-01,
                        1.37695312e-01,
                        -3.52539062e-01,
                        -5.01953125e-01,
                        -5.01220703e-01,
                        2.77099609e-02,
                        2.05566406e-01,
                        4.19433594e-01,
                        1.83837891e-01,
                        -2.86468506e-01,
                        -1.93847656e-01,
                        -3.10241699e-01,
                        -1.85546875e-01,
                        3.78417969e-02,
                        2.77343750e-01,
                        -2.39624023e-01,
                        -2.09228516e-01,
                        1.49414062e-01,
                        4.02832031e-02,
                        -1.76391602e-01,
                        -3.36914062e-02,
                        -4.78515625e-01,
                        -2.31445312e-01,
                        -2.46490479e-01,
                        -3.51562500e-02,
                        -1.24969482e-01,
                        -3.24157715e-01,
                        1.10107422e-01,
                        -5.46875000e-02,
                        2.64892578e-01,
                        1.47705078e-01,
                        -1.11389160e-02,
                        1.46484375e-03,
                        3.37646484e-01,
                        1.80786133e-01,
                        4.23339844e-01,
                        -2.47070312e-01,
                        -2.88726807e-01,
                        -4.96582031e-01,
                        -1.92016602e-01,
                        -3.32031250e-02,
                        -4.39453125e-02,
                        -2.31445312e-01,
                        1.24511719e-01,
                        -3.50097656e-01,
                        2.13317871e-01,
                        3.02734375e-01,
                        -1.40380859e-01,
                        -3.11645508e-01,
                        1.26647949e-01,
                        -1.66381836e-01,
                        -1.71875000e-01,
                        -3.39111328e-01,
                        7.05566406e-02,
                        6.28662109e-03,
                        3.41796875e-02,
                        1.22070312e-01,
                        1.26464844e-01,
                        -3.48144531e-01,
                        7.47070312e-02,
                        -3.09082031e-01,
                        7.39746094e-02,
                        2.96875000e-01,
                        -5.20935059e-02,
                        -3.30078125e-01,
                        5.94482422e-02,
                        -5.22460938e-02,
                        -5.00488281e-02,
                        4.25781250e-01,
                        -1.22314453e-01,
                        1.20361328e-01,
                        4.95117188e-01,
                        -3.19580078e-01,
                        -2.43240356e-01,
                        -3.38623047e-01,
                        -2.68554688e-03,
                        -6.39648438e-02,
                        -9.44824219e-02,
                        -1.57714844e-01,
                        2.51953125e-01,
                        1.72851562e-01,
                        -3.44238281e-02,
                        -2.51953125e-01,
                        2.47009277e-01,
                        -3.03833008e-01,
                        1.75781250e-01,
                        1.02050781e-01,
                        1.43066406e-01,
                        2.34375000e-02,
                        -6.68945312e-02,
                        -4.54040527e-01,
                        6.76269531e-02,
                        -4.64477539e-01,
                        -1.33361816e-02,
                        -1.29516602e-01,
                        -3.02734375e-02,
                        -2.68859863e-02,
                        -2.71484375e-01,
                        -1.59423828e-01,
                        2.89916992e-01,
                        1.28906250e-01,
                        1.07299805e-01,
                        2.63916016e-01,
                        2.63183594e-01,
                        4.29687500e-02,
                        2.59277344e-01,
                        -2.29492188e-01,
                        4.27246094e-01,
                        -1.00463867e-01,
                        -8.66699219e-02,
                        1.13281250e-01,
                        -4.57031250e-01,
                        2.53906250e-02,
                        7.32421875e-02,
                        8.97827148e-02,
                        -1.39648438e-01,
                        -4.44335938e-01,
                        8.76464844e-02,
                        4.94873047e-01,
                        1.50466919e-01,
                        -4.90722656e-02,
                        -2.46093750e-01,
                        -1.69677734e-01,
                        -6.83593750e-03,
                        -4.39453125e-03,
                        4.98046875e-02,
                        -3.01269531e-01,
                        3.03222656e-01,
                        -2.39990234e-01,
                        -1.39831543e-01,
                        9.79003906e-02,
                        -2.77343750e-01,
                        1.77368164e-01,
                        -3.63769531e-02,
                        -2.50488281e-01,
                        -6.56738281e-02,
                        2.19726562e-01,
                        1.66992188e-01,
                        3.17382812e-03,
                        1.40502930e-01,
                        2.63671875e-01,
                        -1.24511719e-02,
                        -4.21875000e-01,
                        3.17810059e-01,
                        -7.10449219e-02,
                        4.29687500e-02,
                        7.42187500e-02,
                        -3.52386475e-01,
                        -4.26757812e-01,
                        -1.07055664e-01,
                        1.52709961e-01,
                        -2.48779297e-01,
                        5.18035889e-02,
                        1.91467285e-01,
                        -1.86035156e-01,
                        -1.55914307e-01,
                        -3.03649902e-01,
                        2.25097656e-01,
                        -5.10253906e-02,
                        -1.33789062e-01,
                        -4.29199219e-01,
                        -4.48608398e-02,
                        1.20605469e-01,
                        1.32446289e-01,
                        -1.32812500e-01,
                        2.06298828e-02,
                        1.95312500e-02,
                        -2.22290039e-01,
                        2.86010742e-01,
                        -7.20825195e-02,
                        -1.14929199e-01,
                        5.17578125e-02,
                        5.48828125e-01,
                        6.68945312e-02,
                        2.54394531e-01,
                        -1.33056641e-02,
                        1.44042969e-02,
                        3.12500000e-01,
                        8.41522217e-02,
                        1.42089844e-01,
                        -1.26953125e-01,
                        4.07714844e-01,
                        2.34863281e-01,
                        -8.83789062e-02,
                        6.58569336e-01,
                        -2.52929688e-01,
                        9.17968750e-02,
                        5.20629883e-02,
                        4.18945312e-01,
                        3.29589844e-02,
                        9.03320312e-02,
                        -2.73864746e-01,
                        -3.07128906e-01,
                        -3.02215576e-01,
                        -7.07031250e-01,
                        -2.23022461e-01,
                        1.54785156e-01,
                        1.28173828e-01,
                        1.89697266e-01,
                        -3.70361328e-01,
                        6.91406250e-01,
                        2.53051758e-01,
                        -1.38427734e-01,
                        -5.78125000e-01,
                        1.78222656e-01,
                        5.01953125e-01,
                        -1.51367188e-02,
                        2.57656097e-01,
                        -2.04101562e-01,
                        -3.75244141e-01,
                        -1.70043945e-01,
                        -2.65136719e-01,
                        -2.87597656e-01,
                        -2.08251953e-01,
                        2.73437500e-01,
                        3.00170898e-01,
                        -8.97827148e-02,
                    ]
                ),
                "planes_l": planes_l,
                "k": 3,
                "num_universes_to_use": 5,
                "hash_tables": hash_tables,
                "id_tables": id_tables,
            },
            "expected": [51, 2478, 105],
        },
        {
            "name": "default_check2",
            "input": {
                "doc_id": 5,
                "v": np.array(
                    [
                        0.0456543,
                        -0.14550781,
                        0.15625,
                        0.16601562,
                        0.10986328,
                        0.00750732,
                        0.07373047,
                        -0.03100586,
                        0.15722656,
                        0.09960938,
                        0.05200195,
                        -0.1484375,
                        0.06445312,
                        0.11816406,
                        -0.02648926,
                        0.09033203,
                        0.00964355,
                        -0.12353516,
                        -0.02856445,
                        0.00723267,
                        -0.06445312,
                        0.08105469,
                        -0.08740234,
                        -0.04077148,
                        0.01879883,
                        0.08251953,
                        -0.07958984,
                        0.07910156,
                        0.01104736,
                        0.08349609,
                        0.00184631,
                        0.07617188,
                        0.04833984,
                        0.01000977,
                        0.00909424,
                        0.00775146,
                        0.02453613,
                        -0.03039551,
                        0.04589844,
                        -0.02661133,
                        0.10253906,
                        -0.01391602,
                        0.01745605,
                        0.06347656,
                        0.06005859,
                        0.03955078,
                        0.09863281,
                        0.0112915,
                        -0.08691406,
                        -0.02563477,
                        -0.05029297,
                        0.05029297,
                        0.01452637,
                        0.00224304,
                        -0.05297852,
                        -0.00866699,
                        0.03051758,
                        0.01275635,
                        0.05688477,
                        0.07861328,
                        0.03051758,
                        0.09667969,
                        0.00386047,
                        -0.20605469,
                        -0.07568359,
                        -0.00860596,
                        -0.06445312,
                        0.00848389,
                        -0.05883789,
                        0.12890625,
                        0.01403809,
                        0.08740234,
                        0.06445312,
                        -0.01055908,
                        -0.04858398,
                        -0.03149414,
                        -0.02319336,
                        0.13476562,
                        0.06884766,
                        0.0859375,
                        0.09472656,
                        -0.16308594,
                        0.14648438,
                        -0.08935547,
                        -0.1171875,
                        -0.08886719,
                        -0.02282715,
                        -0.02575684,
                        -0.04614258,
                        -0.07080078,
                        0.07568359,
                        0.13476562,
                        -0.05761719,
                        -0.05761719,
                        -0.17773438,
                        -0.05932617,
                        0.1171875,
                        0.04199219,
                        -0.13574219,
                        0.04785156,
                        -0.06396484,
                        -0.02709961,
                        0.02111816,
                        -0.00897217,
                        -0.01220703,
                        -0.01165771,
                        0.11083984,
                        0.00056458,
                        0.00031471,
                        -0.09228516,
                        -0.09960938,
                        -0.11279297,
                        -0.02966309,
                        0.03222656,
                        0.16308594,
                        0.06005859,
                        0.06542969,
                        -0.04785156,
                        0.18554688,
                        0.02734375,
                        -0.22753906,
                        -0.01745605,
                        -0.12158203,
                        0.04638672,
                        -0.06542969,
                        -0.12792969,
                        0.06298828,
                        -0.04785156,
                        0.04663086,
                        0.12695312,
                        -0.03112793,
                        -0.16894531,
                        -0.0189209,
                        -0.0100708,
                        0.1015625,
                        -0.14257812,
                        -0.04516602,
                        -0.09033203,
                        -0.02294922,
                        0.08544922,
                        0.11621094,
                        -0.17480469,
                        0.10058594,
                        0.02441406,
                        0.25390625,
                        0.11621094,
                        -0.0378418,
                        -0.0234375,
                        -0.08544922,
                        -0.04003906,
                        -0.06445312,
                        -0.01385498,
                        -0.12890625,
                        0.04150391,
                        -0.08447266,
                        0.04077148,
                        -0.08642578,
                        -0.15625,
                        -0.0043335,
                        -0.01708984,
                        -0.18261719,
                        -0.01818848,
                        0.06347656,
                        -0.00540161,
                        -0.02319336,
                        -0.00662231,
                        0.07910156,
                        -0.06933594,
                        -0.1328125,
                        -0.06005859,
                        -0.18359375,
                        -0.02575684,
                        -0.00842285,
                        -0.27734375,
                        -0.03125,
                        -0.09716797,
                        0.01538086,
                        -0.08203125,
                        -0.02526855,
                        -0.00083542,
                        0.04199219,
                        -0.08642578,
                        -0.0168457,
                        0.08300781,
                        -0.06738281,
                        0.07177734,
                        -0.00488281,
                        0.02209473,
                        0.07275391,
                        0.00325012,
                        0.02575684,
                        -0.01513672,
                        0.04931641,
                        -0.07470703,
                        -0.07958984,
                        -0.01049805,
                        -0.03417969,
                        0.06054688,
                        -0.16894531,
                        -0.20605469,
                        0.04711914,
                        0.10986328,
                        0.03417969,
                        0.078125,
                        -0.11425781,
                        -0.04907227,
                        -0.10253906,
                        -0.04077148,
                        0.05981445,
                        -0.04248047,
                        0.09326172,
                        0.12792969,
                        -0.07128906,
                        0.01867676,
                        -0.03271484,
                        0.08544922,
                        -0.00509644,
                        -0.04589844,
                        -0.14355469,
                        0.06787109,
                        0.0291748,
                        0.05053711,
                        0.00393677,
                        -0.06176758,
                        0.12988281,
                        -0.01843262,
                        0.13574219,
                        0.08789062,
                        0.0612793,
                        0.01831055,
                        -0.04223633,
                        0.01177979,
                        0.06201172,
                        0.09228516,
                        0.1015625,
                        0.00473022,
                        0.02075195,
                        -0.10058594,
                        -0.03979492,
                        0.02075195,
                        0.04443359,
                        -0.02038574,
                        -0.04492188,
                        -0.20605469,
                        0.12304688,
                        0.00136566,
                        0.015625,
                        -0.04663086,
                        0.07080078,
                        -0.04614258,
                        -0.06738281,
                        -0.07666016,
                        0.03149414,
                        0.00500488,
                        0.00204468,
                        0.07275391,
                        0.03393555,
                        0.04736328,
                        -0.02612305,
                        -0.15039062,
                        -0.03515625,
                        -0.01867676,
                        -0.09179688,
                        -0.03588867,
                        0.07714844,
                        0.09521484,
                        0.06591797,
                        0.10693359,
                        -0.18847656,
                        0.05004883,
                        0.06640625,
                        -0.00595093,
                        -0.03320312,
                        0.0088501,
                        0.13183594,
                        -0.0859375,
                        -0.19726562,
                        -0.12695312,
                        -0.0177002,
                        -0.125,
                        -0.04370117,
                        0.02111816,
                        0.03149414,
                        0.09521484,
                        -0.01794434,
                        -0.08349609,
                        -0.13671875,
                        -0.07519531,
                        -0.01428223,
                        0.07373047,
                        -0.02893066,
                        -0.01300049,
                        -0.06030273,
                        -0.03271484,
                        -0.10351562,
                        0.04467773,
                        -0.09521484,
                        -0.01586914,
                        0.00671387,
                        -0.00188446,
                    ]
                ),
                "planes_l": planes_l,
                "k": 4,
                "num_universes_to_use": 6,
                "hash_tables": hash_tables,
                "id_tables": id_tables,
            },
            "expected": [992, 4750, 9486, 9101],
        },
    ]

    for test_case in test_cases:
        result = target(**test_case["input"])

        try:
            assert result == test_case["expected"]
            successful_cases += 1
        except:
            failed_cases.append(
                {
                    "name": test_case["name"],
                    "expected": test_case["expected"],
                    "got": result,
                }
            )
            print(
                f"Wrong chosen neighbor ids. \n\tExpected: {failed_cases[-1].get('expected')}.\n\tGot: {failed_cases[-1].get('got')}."
            )

    if len(failed_cases) == 0:
        print("\033[92m All tests passed")
    else:
        print("\033[92m", successful_cases, " Tests passed")
        print("\033[91m", len(failed_cases), " Tests failed")

    # return failed_cases, len(failed_cases) + successful_cases

